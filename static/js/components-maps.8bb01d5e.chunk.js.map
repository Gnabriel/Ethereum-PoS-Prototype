{"version":3,"sources":["views/app/ui/components/maps.js","components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js"],"names":["MapWithAMarker","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","position","MapsUi","xxs","heading","match","this","className","id","googleMapURL","loadingElement","containerElement","mapElement","query","lang","defaultState","center","zoom","defaultGeometry","Component","Colxx","widths","Separator","getMenuTitle","sub","getUrl","path","index","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map","key","active","to","BreadcrumbContainer"],"mappings":"qTAcMA,EAAiBC,uBACrBC,yBAAc,SAAAC,GAAK,OACjB,kBAAC,YAAD,CAAWC,YAAa,EAAGC,cAAe,CAAEC,KAAM,OAAQC,IAAK,UAC7D,kBAAC,SAAD,CAAQC,SAAU,CAAEF,KAAM,OAAQC,IAAK,gBAKxBE,E,iLAEjB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,IAAI,MACT,kBAAC,IAAD,CAAYC,QAAQ,YAAYC,MAAOC,KAAKV,MAAMS,QAClD,kBAAC,IAAD,CAAWE,UAAU,WAGzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOJ,IAAI,MACT,kBAAC,IAAD,CAAMI,UAAU,QACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcC,GAAG,iBAEnB,kBAACf,EAAD,CACEgB,aAAa,gIACbC,eAAgB,yBAAKH,UAAU,aAC/BI,iBAAkB,yBAAKJ,UAAU,aACjCK,WAAY,yBAAKL,UAAU,iBAIjC,kBAAC,IAAD,CAAMA,UAAU,QACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcC,GAAG,iBAEnB,yBAAKD,UAAU,YACb,kBAAC,QAAD,CAAOM,MAAO,CAAEC,KAAM,UACpB,kBAAC,MAAD,CACEP,UAAU,WACVQ,aAAc,CAAEC,OAAQ,EAAE,OAAQ,SAAUC,KAAM,IAClD,kBAAC,YAAD,CAAWC,gBAAiB,EAAE,OAAQ,uB,GAnCxBC,c,iCCtBpC,iGAEMC,EAAQ,SAACxB,GAAD,OACV,kBAAC,IAAD,iBAASA,EAAT,CAAgByB,OAAQ,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,WAE5DC,EAAY,SAAC1B,GAAD,OACd,yBAAKW,UAAS,oBAAeX,EAAMW,e,iCCNvC,wDAKMgB,EAAe,SAAAC,GACnB,OAAO,kBAAC,IAAD,CAAchB,GAAE,eAAUgB,MAG7BC,EAAS,SAACC,EAAMF,EAAKG,GACzB,OAAc,IAAVA,EACK,GAEAD,EAAKE,MAAMJ,GAAK,GAAKA,GAanBK,EAAkB,SAAC,GAAe,IACvCH,EADsC,EAAZrB,MACbqB,KAAKI,OAAO,GAC3BC,EAAQL,EAAKE,MAAM,KAIvB,OAHIG,EAAMA,EAAMC,OAAS,GAAGC,QAAQ,MAAQ,IAC1CF,EAAQA,EAAMG,QAAO,SAAAC,GAAC,OAAwB,IAApBA,EAAEF,QAAQ,SAGpC,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAY1B,UAAU,iEACnBwB,EAAMK,KAAI,SAACZ,EAAKG,GACf,OACE,kBAAC,IAAD,CAAgBU,IAAKV,EAAOW,OAAQP,EAAMC,SAAWL,EAAQ,GAC1DI,EAAMC,SAAWL,EAAQ,EACxB,kBAAC,IAAD,CAASY,GAAI,IAAMd,EAAOC,EAAMF,EAAKG,IAClCJ,EAAaC,IAGhBD,EAAaC,UAUdgB,IApCa,SAAC,GAAwB,IAAtBpC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACtC,OACE,kBAAC,WAAD,KACGD,GAAW,4BAAI,kBAAC,IAAD,CAAcI,GAAIJ,KAClC,kBAACyB,EAAD,CAAiBxB,MAAOA","file":"static/js/components-maps.8bb01d5e.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Row, Card, CardBody, CardTitle } from \"reactstrap\";\r\nimport IntlMessages from \"../../../../helpers/IntlMessages\";\r\nimport { Colxx, Separator } from \"../../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../../containers/navs/Breadcrumb\";\r\n\r\nimport { YMaps, Map, Placemark } from \"react-yandex-maps\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker\r\n} from \"react-google-maps\";\r\n\r\nconst MapWithAMarker = withScriptjs(\r\n  withGoogleMap(props => (\r\n    <GoogleMap defaultZoom={8} defaultCenter={{ lat: -34.397, lng: 150.644 }}>\r\n      <Marker position={{ lat: -34.397, lng: 150.644 }} />\r\n    </GoogleMap>\r\n  ))\r\n);\r\n\r\nexport default class MapsUi extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Breadcrumb heading=\"menu.maps\" match={this.props.match} />\r\n            <Separator className=\"mb-5\" />\r\n          </Colxx>\r\n        </Row>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Card className=\"mb-4\">\r\n              <CardBody>\r\n                <CardTitle>\r\n                  <IntlMessages id=\"maps.google\" />\r\n                </CardTitle>\r\n                <MapWithAMarker\r\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCO8MfadmlotuuHC8wmjwL_46I5QAMIiRU&v=3.exp&libraries=geometry,drawing,places\"\r\n                  loadingElement={<div className=\"map-item\" />}\r\n                  containerElement={<div className=\"map-item\" />}\r\n                  mapElement={<div className=\"map-item\" />}/>\r\n              </CardBody>\r\n            </Card>\r\n\r\n            <Card className=\"mb-4\">\r\n              <CardBody>\r\n                <CardTitle>\r\n                  <IntlMessages id=\"maps.yandex\" />\r\n                </CardTitle>\r\n                <div className=\"map-item\">\r\n                  <YMaps query={{ lang: \"en-US\" }}>\r\n                    <Map\r\n                      className=\"map-item\"\r\n                      defaultState={{ center: [-34.397, 150.644], zoom: 9 }}>\r\n                      <Placemark defaultGeometry={[-34.397, 150.644]} />\r\n                    </Map>\r\n                  </YMaps>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading}/></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n"],"sourceRoot":""}