{"version":3,"sources":["redux/menu/actions.js","redux/settings/actions.js","redux/actions.js","constants/defaultValues.js","assets/css/sass/themes lazy /^/gogo/..*/.scss$/ groupOptions: {} namespace object","redux/auth/actions.js","redux/chat/actions.js","serviceWorker.js","redux/settings/reducer.js","redux/menu/reducer.js","redux/auth/reducer.js","redux/todo/reducer.js","redux/chat/reducer.js","redux/surveyList/reducer.js","redux/surveyDetail/reducer.js","redux/reducers.js","redux/auth/saga.js","redux/todo/saga.js","redux/chat/saga.js","redux/surveyList/saga.js","redux/surveyDetail/saga.js","redux/sagas.js","redux/store.js","AppRenderer.js","redux/todo/actions.js","redux/surveyList/actions.js","redux/surveyDetail/actions.js","helpers/Utils.js","helpers/Firebase.js","index.js"],"names":["changeSelectedMenuHasSubItems","payload","type","MENU_CHANGE_HAS_SUB_ITEM_STATUS","changeDefaultClassnames","strCurrentClasses","MENU_CHANGE_DEFAULT_CLASSES","addContainerClassname","classname","newClasses","indexOf","MENU_CONTAINER_ADD_CLASSNAME","clickOnMobileMenu","currentClasses","split","filter","x","nextClasses","includes","join","MENU_CLICK_MOBILE_MENU","containerClassnames","menuClickCount","setContainerClassnames","clickIndex","selectedMenuHasSubItems","MENU_SET_CLASSNAMES","changeLocale","locale","localStorage","setItem","CHANGE_LOCALE","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","LOGOUT_USER","FORGOT_PASSWORD","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR","RESET_PASSWORD","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","TODO_GET_LIST","TODO_GET_LIST_SUCCESS","TODO_GET_LIST_ERROR","TODO_GET_LIST_WITH_FILTER","TODO_GET_LIST_WITH_ORDER","TODO_GET_LIST_SEARCH","TODO_ADD_ITEM","TODO_ADD_ITEM_SUCCESS","TODO_ADD_ITEM_ERROR","TODO_SELECTED_ITEMS_CHANGE","CHAT_GET_CONTACTS","CHAT_GET_CONTACTS_SUCCESS","CHAT_GET_CONTACTS_ERROR","CHAT_GET_CONVERSATIONS","CHAT_GET_CONVERSATIONS_SUCCESS","CHAT_GET_CONVERSATIONS_ERROR","CHAT_ADD_MESSAGE_TO_CONVERSATION","CHAT_CREATE_CONVERSATION","CHAT_SEARCH_CONTACT","CHAT_CHANGE_CONVERSATION","SURVEY_LIST_GET_LIST","SURVEY_LIST_GET_LIST_SUCCESS","SURVEY_LIST_GET_LIST_ERROR","SURVEY_LIST_GET_LIST_WITH_FILTER","SURVEY_LIST_GET_LIST_WITH_ORDER","SURVEY_LIST_GET_LIST_SEARCH","SURVEY_LIST_ADD_ITEM","SURVEY_LIST_ADD_ITEM_SUCCESS","SURVEY_LIST_ADD_ITEM_ERROR","SURVEY_LIST_SELECTED_ITEMS_CHANGE","SURVEY_GET_DETAILS","SURVEY_GET_DETAILS_SUCCESS","SURVEY_GET_DETAILS_ERROR","SURVEY_DELETE_QUESTION","SURVEY_SAVE","defaultMenuType","subHiddenBreakpoint","menuHiddenBreakpoint","defaultLocale","localeOptions","id","name","direction","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","searchPath","servicePath","themeColorStorageKey","isMultiColorActive","defaultColor","isDarkSwitchActive","defaultDirection","themeRadiusStorageKey","isDemo","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","t","keys","Object","module","exports","loginUser","user","history","loginUserSuccess","loginUserError","message","forgotPassword","forgotUserMail","forgotPasswordSuccess","forgotPasswordError","resetPassword","resetPasswordCode","newPassword","resetPasswordSuccess","resetPasswordError","registerUser","registerUserSuccess","registerUserError","logoutUser","getContacts","getContactsSuccess","contacts","currentUser","getContactsError","error","getConversations","userId","getConversationsSuccess","conversations","selectedUser","getConversationsError","addMessageToConversation","currentUserId","selectedUserId","allConversations","createConversation","searchContact","keyword","changeConversation","Boolean","window","location","hostname","match","INIT_STATE","getItem","length","loading","allTodoItems","todoItems","searchKeyword","orderColumn","labels","label","color","orderColumns","column","categories","selectedItems","allContacts","loadingContacts","loadingConversations","allSurveyItems","surveyItems","survey","reducers","combineReducers","menu","state","action","assign","settings","authUser","uid","todoApp","value","filteredItems","item","sortedItems","sort","a","b","find","toLowerCase","searchItems","title","detail","status","category","chatApp","searchedContacts","surveyListApp","surveyDetailApp","watchLoginUser","loginWithEmailPassword","watchRegisterUser","registerWithEmailPassword","watchLogoutUser","logout","watchForgotPassword","watchResetPassword","rootSaga","takeEvery","loginWithEmailPasswordAsync","email","password","auth","signInWithEmailAndPassword","catch","call","put","push","registerWithEmailPasswordAsync","createUserWithEmailAndPassword","logoutAsync","signOut","removeItem","forgotPasswordAsync","sendPasswordResetEmail","forgotPasswordStatus","resetPasswordAsync","confirmPasswordReset","resetPasswordStatus","all","fork","getTodoListItems","addTodoItem","watchGetList","wathcAddItem","getTodoListRequest","success","fail","setTimeout","todoData","data","response","getTodoListSuccess","getTodoListError","addTodoItemRequest","items","createDate","getDateWithFormat","splice","addTodoItemSuccess","addTodoItemError","loadContacts","loadConversations","createNewConversation","watchGetContact","watchGetConversation","watchAddMessageToConversation","watchCreateConversation","loadContactsAsync","contactsData","loadConversationsAsync","conversationsData","users","addMessageToConversationAsync","conversation","time","getCurrentTime","messages","sender","text","lastMessageTime","createNewConversationAsync","getSurveyListItems","addSurveyItem","getSurveyListRequest","surveyListData","getSurveyListSuccess","getSurveyListError","addSurveyItemRequest","addSurveyItemSuccess","addSurveyItemError","getSurveyDetailItems","deleteQuestion","watchGetDetail","watchDeleteQuestion","getSurveyDetailRequest","surveyDetailData","deleteQuestionRequest","quesitonId","questions","getSurveyDetailSuccess","getSurveyDetailError","questionId","saveSurvey","getState","authSagas","todoSagas","chatSagas","surveyListSagas","surveyDetailSagas","sagaMiddleware","createSagaMiddleware","middlewares","App","React","lazy","ReactDOM","render","store","initialState","createStore","compose","applyMiddleware","run","sagas","configureStore","fallback","className","document","getElementById","navigator","serviceWorker","ready","registration","unregister","getTodoList","getTodoListWithFilter","getTodoListWithOrder","getTodoListSearch","selectedTodoItemsChange","getSurveyList","getSurveyListWithFilter","getSurveyListWithOrder","getSurveyListSearch","selectedSurveyItemsChange","getSurveyDetail","deleteSurveyQuestion","mapOrder","array","order","key","A","B","today","Date","dd","getDate","mm","getMonth","getFullYear","now","getHours","getMinutes","getDirection","localValue","isRtl","setDirection","firebase","initializeApp","database","require"],"mappings":"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","file":"static/js/main.bd924389.chunk.js","sourcesContent":["import {\r\n    MENU_SET_CLASSNAMES,\r\n    MENU_CONTAINER_ADD_CLASSNAME,\r\n    MENU_CLICK_MOBILE_MENU,\r\n    MENU_CHANGE_DEFAULT_CLASSES,\r\n    MENU_CHANGE_HAS_SUB_ITEM_STATUS\r\n} from '../actions';\r\n\r\nexport const changeSelectedMenuHasSubItems = (payload) => {\r\n    return (\r\n        {\r\n            type: MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n            payload: payload\r\n        }\r\n    )\r\n}\r\n\r\nexport const changeDefaultClassnames = (strCurrentClasses) => {\r\n    return (\r\n        {\r\n            type: MENU_CHANGE_DEFAULT_CLASSES,\r\n            payload: strCurrentClasses\r\n        }\r\n    )\r\n}\r\n\r\nexport const addContainerClassname = (classname, strCurrentClasses) => {\r\n    const newClasses = !strCurrentClasses.indexOf(classname) > -1 ? strCurrentClasses + ' ' + classname : strCurrentClasses;\r\n    return (\r\n        {\r\n            type: MENU_CONTAINER_ADD_CLASSNAME,\r\n            payload: newClasses\r\n        }\r\n    )\r\n}\r\n\r\nexport const clickOnMobileMenu = (strCurrentClasses) => {\r\n    const currentClasses = strCurrentClasses ? strCurrentClasses.split(' ').filter(x => x !== '' && x !== 'sub-show-temporary') : '';\r\n    let nextClasses = '';\r\n    if (currentClasses.includes('main-show-temporary')) {\r\n        nextClasses = (currentClasses.filter(x => x !== 'main-show-temporary')).join(' ');\r\n    } else {\r\n        nextClasses = currentClasses.join(' ') + ' main-show-temporary';\r\n    }\r\n    return (\r\n        {\r\n            type: MENU_CLICK_MOBILE_MENU,\r\n            payload: { containerClassnames: nextClasses, menuClickCount: 0 }\r\n        }\r\n    )\r\n}\r\n\r\nexport const setContainerClassnames = (clickIndex, strCurrentClasses,selectedMenuHasSubItems) => {\r\n    const currentClasses = strCurrentClasses ? strCurrentClasses.split(' ').filter(x => x !== '') : '';\r\n    let nextClasses = '';\r\n    if (!selectedMenuHasSubItems) {\r\n        if (currentClasses.includes(\"menu-default\") && (clickIndex % 4 === 0 || clickIndex % 4 === 3)) {\r\n          clickIndex=1;\r\n        }\r\n        if (currentClasses.includes(\"menu-sub-hidden\") && (clickIndex % 4 === 2)) {\r\n          clickIndex=0;\r\n        }\r\n        if (currentClasses.includes(\"menu-hidden\") && (clickIndex % 4 === 2 || clickIndex % 4 === 3 )) {\r\n            clickIndex=0;\r\n          }\r\n\r\n      }\r\n\r\n\r\n\r\n    if (clickIndex % 4 === 0) {\r\n        if (currentClasses.includes('menu-default') && currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-default menu-sub-hidden';\r\n        } else if (currentClasses.includes('menu-default')) {\r\n            nextClasses = 'menu-default';\r\n        } else if (currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-sub-hidden';\r\n        } else if (currentClasses.includes('menu-hidden')) {\r\n            nextClasses = 'menu-hidden';\r\n        }\r\n        clickIndex = 0;\r\n    } else if (clickIndex % 4 === 1) {\r\n        if (currentClasses.includes('menu-default') && currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-default menu-sub-hidden main-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-default')) {\r\n            nextClasses = 'menu-default sub-hidden';\r\n        } else if (currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-sub-hidden main-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-hidden')) {\r\n            nextClasses = 'menu-hidden main-show-temporary';\r\n        }\r\n    } else if (clickIndex % 4 === 2) {\r\n        if (currentClasses.includes('menu-default') && currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-default menu-sub-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-default')) {\r\n            nextClasses = 'menu-default main-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-sub-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-hidden')) {\r\n            nextClasses = 'menu-hidden main-show-temporary sub-show-temporary';\r\n        }\r\n    } else if (clickIndex % 4 === 3) {\r\n        if (currentClasses.includes('menu-default') && currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-default menu-sub-hidden sub-show-temporary';\r\n        } else if (currentClasses.includes('menu-default')) {\r\n            nextClasses = 'menu-default sub-hidden';\r\n        } else if (currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-sub-hidden sub-show-temporary';\r\n        } else if (currentClasses.includes('menu-hidden')) {\r\n            nextClasses = 'menu-hidden main-show-temporary';\r\n        }\r\n    }\r\n    if (currentClasses.includes('menu-mobile')) {\r\n        nextClasses += ' menu-mobile';\r\n    }\r\n    return (\r\n        {\r\n            type: MENU_SET_CLASSNAMES,\r\n            payload: { containerClassnames: nextClasses, menuClickCount: clickIndex }\r\n        }\r\n    )\r\n}","import {\r\n    CHANGE_LOCALE\r\n} from '../actions';\r\n\r\n\r\nexport const changeLocale = (locale) => {\r\n    localStorage.setItem('currentLanguage', locale);\r\n    return (\r\n        {\r\n            type: CHANGE_LOCALE,\r\n            payload: locale\r\n        }\r\n    )\r\n}\r\n\r\n","/* SETTINGS */\r\nexport const CHANGE_LOCALE = \"CHANGE_LOCALE\";\r\n\r\n/* AUTH */\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\r\nexport const LOGIN_USER_ERROR = \"LOGIN_USER_ERROR\";\r\nexport const REGISTER_USER = \"REGISTER_USER\";\r\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\r\nexport const REGISTER_USER_ERROR = \"REGISTER_USER_ERROR\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const FORGOT_PASSWORD = \"FORGOT_PASSWORD\";\r\nexport const FORGOT_PASSWORD_SUCCESS = \"FORGOT_PASSWORD_SUCCESS\";\r\nexport const FORGOT_PASSWORD_ERROR = \"FORGOT_PASSWORD_ERROR\";\r\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\r\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\r\nexport const RESET_PASSWORD_ERROR = \"RESET_PASSWORD_ERROR\";\r\n\r\n/* MENU */\r\nexport const MENU_SET_CLASSNAMES = \"MENU_SET_CLASSNAMES\";\r\nexport const MENU_CONTAINER_ADD_CLASSNAME = \"MENU_CONTAINER_ADD_CLASSNAME\";\r\nexport const MENU_CLICK_MOBILE_MENU = \"MENU_CLICK_MOBILE_MENU\";\r\nexport const MENU_CHANGE_DEFAULT_CLASSES = \"MENU_CHANGE_DEFAULT_CLASSES\";\r\nexport const MENU_CHANGE_HAS_SUB_ITEM_STATUS =\r\n  \"MENU_CHANGE_HAS_SUB_ITEM_STATUS\";\r\n\r\n/* TODOAPP*/\r\nexport const TODO_GET_LIST = \"TODO_GET_LIST\";\r\nexport const TODO_GET_LIST_SUCCESS = \"TODO_GET_LIST_SUCCESS\";\r\nexport const TODO_GET_LIST_ERROR = \"TODO_GET_LIST_ERROR\";\r\nexport const TODO_GET_LIST_WITH_FILTER = \"TODO_GET_LIST_WITH_FILTER\";\r\nexport const TODO_GET_LIST_WITH_ORDER = \"TODO_GET_LIST_WITH_ORDER\";\r\nexport const TODO_GET_LIST_SEARCH = \"TODO_GET_LIST_SEARCH\";\r\nexport const TODO_ADD_ITEM = \"TODO_ADD_ITEM\";\r\nexport const TODO_ADD_ITEM_SUCCESS = \"TODO_ADD_ITEM_SUCCESS\";\r\nexport const TODO_ADD_ITEM_ERROR = \"TODO_ADD_ITEM_ERROR\";\r\nexport const TODO_SELECTED_ITEMS_CHANGE = \"TODO_SELECTED_ITEMS_CHANGE\";\r\n\r\n/* CHAT APP*/\r\nexport const CHAT_GET_CONTACTS = \"CHAT_GET_CONTACTS\";\r\nexport const CHAT_GET_CONTACTS_SUCCESS = \"CHAT_GET_CONTACTS_SUCCESS\";\r\nexport const CHAT_GET_CONTACTS_ERROR = \"CHAT_GET_CONTACTS_ERROR\";\r\nexport const CHAT_GET_CONVERSATIONS = \"CHAT_GET_CONVERSATIONS\";\r\nexport const CHAT_GET_CONVERSATIONS_SUCCESS = \"CHAT_GET_CONVERSATIONS_SUCCESS\";\r\nexport const CHAT_GET_CONVERSATIONS_ERROR = \"CHAT_GET_CONVERSATIONS_ERROR\";\r\nexport const CHAT_ADD_MESSAGE_TO_CONVERSATION =\r\n  \"CHAT_ADD_MESSAGE_TO_CONVERSATION\";\r\nexport const CHAT_CREATE_CONVERSATION = \"CHAT_CREATE_CONVERSATION\";\r\nexport const CHAT_SEARCH_CONTACT = \"CHAT_SEARCH_CONTACT\";\r\nexport const CHAT_CHANGE_CONVERSATION = \"CHAT_CHANGE_CONVERSATION\";\r\n\r\n/* SURVEY LIST APP*/\r\nexport const SURVEY_LIST_GET_LIST = \"SURVEY_LIST_GET_LIST\";\r\nexport const SURVEY_LIST_GET_LIST_SUCCESS = \"SURVEY_LIST_GET_LIST_SUCCESS\";\r\nexport const SURVEY_LIST_GET_LIST_ERROR = \"SURVEY_LIST_GET_LIST_ERROR\";\r\nexport const SURVEY_LIST_GET_LIST_WITH_FILTER =\r\n  \"SURVEY_LIST_GET_LIST_WITH_FILTER\";\r\nexport const SURVEY_LIST_GET_LIST_WITH_ORDER =\r\n  \"SURVEY_LIST_GET_LIST_WITH_ORDER\";\r\nexport const SURVEY_LIST_GET_LIST_SEARCH = \"SURVEY_LIST_GET_LIST_SEARCH\";\r\nexport const SURVEY_LIST_ADD_ITEM = \"SURVEY_LIST_ADD_ITEM\";\r\nexport const SURVEY_LIST_ADD_ITEM_SUCCESS = \"SURVEY_LIST_ADD_ITEM_SUCCESS\";\r\nexport const SURVEY_LIST_ADD_ITEM_ERROR = \"SURVEY_LIST_ADD_ITEM_ERROR\";\r\nexport const SURVEY_LIST_SELECTED_ITEMS_CHANGE =\r\n  \"SURVEY_LIST_SELECTED_ITEMS_CHANGE\";\r\n\r\n/* SURVEY DETAIL APP*/\r\nexport const SURVEY_GET_DETAILS = \"SURVEY_GET_DETAILS\";\r\nexport const SURVEY_GET_DETAILS_SUCCESS = \"SURVEY_GET_DETAILS_SUCCESS\";\r\nexport const SURVEY_GET_DETAILS_ERROR = \"SURVEY_GET_DETAILS_ERROR\";\r\nexport const SURVEY_DELETE_QUESTION = \"SURVEY_DELETE_QUESTION\";\r\nexport const SURVEY_SAVE = \"SURVEY_SAVE\";\r\n\r\nexport * from \"./menu/actions\";\r\nexport * from \"./settings/actions\";\r\nexport * from \"./auth/actions\";\r\nexport * from \"./todo/actions\";\r\nexport * from \"./chat/actions\";\r\nexport * from \"./surveyList/actions\";\r\nexport * from \"./surveyDetail/actions\";\r\n","/* \r\nMenu Types:\r\n\"menu-default\", \"menu-sub-hidden\", \"menu-hidden\"\r\n*/\r\nexport const defaultMenuType = \"menu-default\";\r\n\r\nexport const subHiddenBreakpoint = 1440;\r\nexport const menuHiddenBreakpoint = 768;\r\nexport const defaultLocale = \"en\";\r\nexport const localeOptions = [\r\n  { id: \"en\", name: \"English - LTR\", direction: \"ltr\" },\r\n  { id: \"es\", name: \"Español\", direction: \"ltr\" },\r\n  { id: \"enrtl\", name: \"English - RTL\", direction: \"rtl\" }\r\n];\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyBBksq-Asxq2M4Ot-75X19IyrEYJqNBPcg\",\r\n  authDomain: \"gogo-react-login.firebaseapp.com\",\r\n  databaseURL: \"https://gogo-react-login.firebaseio.com\",\r\n  projectId: \"gogo-react-login\",\r\n  storageBucket: \"gogo-react-login.appspot.com\",\r\n  messagingSenderId: \"216495999563\"\r\n};\r\n\r\nexport const searchPath = \"/app/pages/search\";\r\nexport const servicePath = \"https://api.coloredstrategies.com\";\r\n\r\n/* \r\nColor Options:\r\n\"light.purple\", \"light.blue\", \"light.green\", \"light.orange\", \"light.red\", \"dark.purple\", \"dark.blue\", \"dark.green\", \"dark.orange\", \"dark.red\"\r\n*/\r\nexport const themeColorStorageKey=\"__theme_color\"\r\nexport const isMultiColorActive = true;\r\nexport const defaultColor = \"light.purple\";\r\nexport const isDarkSwitchActive = true;\r\nexport const defaultDirection = \"ltr\";\r\nexport const themeRadiusStorageKey = \"__theme_radius\";\r\nexport const isDemo = true;\r\n","var map = {\n\t\"./gogo.dark.blue.scss\": [\n\t\t180,\n\t\t110\n\t],\n\t\"./gogo.dark.green.scss\": [\n\t\t181,\n\t\t111\n\t],\n\t\"./gogo.dark.orange.scss\": [\n\t\t182,\n\t\t112\n\t],\n\t\"./gogo.dark.purple.scss\": [\n\t\t183,\n\t\t113\n\t],\n\t\"./gogo.dark.red.scss\": [\n\t\t184,\n\t\t114\n\t],\n\t\"./gogo.light.blue.scss\": [\n\t\t185,\n\t\t115\n\t],\n\t\"./gogo.light.green.scss\": [\n\t\t186,\n\t\t116\n\t],\n\t\"./gogo.light.orange.scss\": [\n\t\t187,\n\t\t117\n\t],\n\t\"./gogo.light.purple.scss\": [\n\t\t188,\n\t\t118\n\t],\n\t\"./gogo.light.red.scss\": [\n\t\t189,\n\t\t119\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 104;\nmodule.exports = webpackAsyncContext;","import {\r\n  LOGIN_USER,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  LOGIN_USER_ERROR,\r\n  REGISTER_USER_ERROR,\r\n  FORGOT_PASSWORD,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_ERROR,\r\n  RESET_PASSWORD,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_ERROR\r\n} from '../actions';\r\n\r\nexport const loginUser = (user, history) => ({\r\n  type: LOGIN_USER,\r\n  payload: { user, history }\r\n});\r\nexport const loginUserSuccess = (user) => ({\r\n  type: LOGIN_USER_SUCCESS,\r\n  payload: user\r\n});\r\nexport const loginUserError = (message) => ({\r\n  type: LOGIN_USER_ERROR,\r\n  payload: { message }\r\n});\r\n\r\nexport const forgotPassword = (forgotUserMail, history) => ({\r\n  type: FORGOT_PASSWORD,\r\n  payload: { forgotUserMail, history }\r\n});\r\nexport const forgotPasswordSuccess = (forgotUserMail) => ({\r\n  type: FORGOT_PASSWORD_SUCCESS,\r\n  payload: forgotUserMail\r\n});\r\nexport const forgotPasswordError = (message) => ({\r\n  type: FORGOT_PASSWORD_ERROR,\r\n  payload: { message }\r\n});\r\n\r\nexport const resetPassword = ({resetPasswordCode,newPassword,history}) => ({\r\n  type: RESET_PASSWORD,\r\n  payload: { resetPasswordCode,newPassword,history }\r\n});\r\nexport const resetPasswordSuccess = (newPassword) => ({\r\n  type: RESET_PASSWORD_SUCCESS,\r\n  payload: newPassword\r\n});\r\nexport const resetPasswordError = (message) => ({\r\n  type: RESET_PASSWORD_ERROR,\r\n  payload: { message }\r\n});\r\n\r\n\r\n\r\nexport const registerUser = (user, history) => ({\r\n  type: REGISTER_USER,\r\n  payload: { user, history }\r\n})\r\nexport const registerUserSuccess = (user) => ({\r\n  type: REGISTER_USER_SUCCESS,\r\n  payload: user\r\n})\r\nexport const registerUserError = (message) => ({\r\n  type: REGISTER_USER_ERROR,\r\n  payload: { message }\r\n})\r\n\r\nexport const logoutUser = (history) => ({\r\n  type: LOGOUT_USER,\r\n  payload: { history }\r\n});","import {\r\n    CHAT_GET_CONTACTS,\r\n    CHAT_GET_CONTACTS_SUCCESS,\r\n    CHAT_GET_CONTACTS_ERROR,\r\n    CHAT_GET_CONVERSATIONS,\r\n    CHAT_GET_CONVERSATIONS_SUCCESS,\r\n    CHAT_GET_CONVERSATIONS_ERROR,\r\n    CHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n    CHAT_CREATE_CONVERSATION,\r\n    CHAT_SEARCH_CONTACT,\r\n    CHAT_CHANGE_CONVERSATION\r\n} from '../actions';\r\n\r\n\r\nexport const getContacts = () => ({\r\n    type: CHAT_GET_CONTACTS\r\n});\r\n\r\nexport const getContactsSuccess = (contacts, currentUser) => {\r\n    return ({\r\n        type: CHAT_GET_CONTACTS_SUCCESS,\r\n        payload: { contacts, currentUser }\r\n    })\r\n};\r\n\r\nexport const getContactsError = (error) => ({\r\n    type: CHAT_GET_CONTACTS_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const getConversations = (userId) => ({\r\n    type: CHAT_GET_CONVERSATIONS,\r\n    payload:  userId \r\n});\r\nexport const getConversationsSuccess = (conversations, selectedUser) => ({\r\n    type: CHAT_GET_CONVERSATIONS_SUCCESS,\r\n    payload: { conversations, selectedUser }\r\n});\r\n\r\nexport const getConversationsError = (error) => ({\r\n    type: CHAT_GET_CONVERSATIONS_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const addMessageToConversation = (currentUserId,selectedUserId,message,allConversations) => ({\r\n    type: CHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n    payload: {currentUserId,selectedUserId,message,allConversations}\r\n});\r\n\r\nexport const createConversation = (currentUserId,selectedUserId,allConversations) => {\r\n    return ({\r\n        type: CHAT_CREATE_CONVERSATION,\r\n        payload: {currentUserId,selectedUserId,allConversations}\r\n    })\r\n};\r\n\r\nexport const searchContact = (keyword) => ({\r\n    type: CHAT_SEARCH_CONTACT,\r\n    payload: keyword\r\n});\r\n\r\nexport const changeConversation = (userId) => ({\r\n    type: CHAT_CHANGE_CONVERSATION,\r\n    payload: userId\r\n});\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport {defaultLocale,localeOptions} from '../../constants/defaultValues'\r\n\r\nimport {\r\n    CHANGE_LOCALE\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n\tlocale: (localStorage.getItem('currentLanguage') && localeOptions.filter(x=>x.id===localStorage.getItem('currentLanguage')).length>0) ? localStorage.getItem('currentLanguage') : defaultLocale,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_LOCALE:\r\n\t\treturn { ...state, locale:action.payload};\r\n\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}","import {\r\n\r\n\tMENU_SET_CLASSNAMES,\r\n\tMENU_CONTAINER_ADD_CLASSNAME,\r\n\tMENU_CLICK_MOBILE_MENU,\r\n\tMENU_CHANGE_DEFAULT_CLASSES,\r\n\tMENU_CHANGE_HAS_SUB_ITEM_STATUS\r\n} from '../actions';\r\n\r\nimport {defaultMenuType,  subHiddenBreakpoint, menuHiddenBreakpoint } from '../../constants/defaultValues'\r\n\r\n\r\nconst INIT_STATE = {\r\n\tcontainerClassnames: defaultMenuType,\r\n\tsubHiddenBreakpoint,\r\n\tmenuHiddenBreakpoint,\r\n\tmenuClickCount: 0,\r\n\tselectedMenuHasSubItems: defaultMenuType===\"menu-default\" //if you use menu-sub-hidden as default menu type, set value of this variable to false\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase MENU_CHANGE_HAS_SUB_ITEM_STATUS:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tselectedMenuHasSubItems: action.payload\r\n\t\t})\r\n\r\n\t\tcase MENU_SET_CLASSNAMES:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcontainerClassnames: action.payload.containerClassnames,\r\n\t\t\tmenuClickCount:action.payload.menuClickCount\r\n\t\t})\r\n\r\n\t\tcase MENU_CLICK_MOBILE_MENU:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcontainerClassnames: action.payload.containerClassnames,\r\n\t\t\tmenuClickCount:action.payload.menuClickCount\r\n\t\t})\r\n\r\n\t\tcase MENU_CONTAINER_ADD_CLASSNAME:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcontainerClassnames: action.payload\r\n\t\t})\r\n\r\n\t\tcase MENU_CHANGE_DEFAULT_CLASSES:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tcontainerClassnames: action.payload\r\n\t\t\t})\r\n\t\t\t\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}\r\n","import {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_ERROR,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_ERROR,\r\n    LOGOUT_USER,\r\n    FORGOT_PASSWORD,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_ERROR,\r\n    RESET_PASSWORD,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_ERROR\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n    user: localStorage.getItem('user_id'),\r\n    forgotUserMail: '',\r\n    newPassword: '',\r\n    resetPasswordCode: '',\r\n    loading: false,\r\n    error: ''\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true, error: '' };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, loading: false, user: action.payload.uid, error: '' };\r\n        case LOGIN_USER_ERROR:\r\n            return { ...state, loading: false, user: '', error: action.payload.message };\r\n        case FORGOT_PASSWORD:\r\n            return { ...state, loading: true, error: '' };\r\n        case FORGOT_PASSWORD_SUCCESS:\r\n            return { ...state, loading: false, forgotUserMail: action.payload, error: '' };\r\n        case FORGOT_PASSWORD_ERROR:\r\n            return { ...state, loading: false, forgotUserMail: '', error: action.payload.message };\r\n        case RESET_PASSWORD:\r\n            return { ...state, loading: true, error: '' };\r\n        case RESET_PASSWORD_SUCCESS:\r\n            return { ...state, loading: false, newPassword: action.payload, resetPasswordCode: '', error: '' };\r\n        case RESET_PASSWORD_ERROR:\r\n            return { ...state, loading: false, newPassword: '', resetPasswordCode: '', error: action.payload.message };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true, error: '' };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, loading: false, user: action.payload.uid, error: '' };\r\n        case REGISTER_USER_ERROR:\r\n            return { ...state, loading: false, user: '', error: action.payload.message };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null, error: '' };\r\n        default: return { ...state };\r\n    }\r\n}\r\n","import {\r\n\tTODO_GET_LIST,\r\n\tTODO_GET_LIST_SUCCESS,\r\n\tTODO_GET_LIST_ERROR,\r\n\tTODO_GET_LIST_WITH_FILTER,\r\n\tTODO_GET_LIST_WITH_ORDER,\r\n\tTODO_GET_LIST_SEARCH,\r\n\tTODO_ADD_ITEM,\r\n\tTODO_ADD_ITEM_SUCCESS,\r\n\tTODO_ADD_ITEM_ERROR,\r\n\tTODO_SELECTED_ITEMS_CHANGE\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n\tallTodoItems: null,\r\n\ttodoItems: null,\r\n\terror: '',\r\n\tfilter: null,\r\n\tsearchKeyword: '',\r\n\torderColumn: null,\r\n\tloading: false,\r\n\tlabels: [\r\n\t\t{ label: \"EDUCATION\", color: \"secondary\" },\r\n\t\t{ label: \"NEW FRAMEWORK\", color: \"primary\" },\r\n\t\t{ label: \"PERSONAL\", color: \"info\" }\r\n\t],\r\n\torderColumns: [\r\n\t\t{ column: \"title\", label: \"Title\" },\r\n\t\t{ column: \"category\", label: \"Category\" },\r\n\t\t{ column: \"status\", label: \"Status\" },\r\n\t\t{ column: \"label\", label: \"Label\" },\r\n\t],\r\n\tcategories: [\"Flexbox\", \"Sass\", \"React\"],\r\n\tselectedItems: []\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase TODO_GET_LIST:\r\n\t\t\treturn { ...state, loading: false };\r\n\r\n\t\tcase TODO_GET_LIST_SUCCESS:\r\n\t\t\treturn { ...state, loading: true, allTodoItems: action.payload, todoItems: action.payload };\r\n\r\n\t\tcase TODO_GET_LIST_ERROR:\r\n\t\t\treturn { ...state, loading: true, error: action.payload };\r\n\r\n\t\tcase TODO_GET_LIST_WITH_FILTER:\r\n\t\t\tif (action.payload.column === '' || action.payload.value === '') {\r\n\t\t\t\treturn { ...state, loading: true, todoItems: state.allTodoItems, filter: null };\r\n\t\t\t} else {\r\n\t\t\t\tconst filteredItems = state.allTodoItems.filter((item) =>\r\n\t\t\t\t\titem[action.payload.column] === action.payload.value);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state, loading: true, todoItems: filteredItems, filter: {\r\n\t\t\t\t\t\tcolumn: action.payload.column,\r\n\t\t\t\t\t\tvalue: action.payload.value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\tcase TODO_GET_LIST_WITH_ORDER:\r\n\t\t\tif (action.payload === '') {\r\n\t\t\t\treturn { ...state, loading: true, todoItems: state.todoItems, orderColumn: null };\r\n\t\t\t} else {\r\n\t\t\t\tconst sortedItems = state.todoItems.sort((a, b) => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\ta[action.payload] <\r\n\t\t\t\t\t\tb[action.payload]\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\telse if (\r\n\t\t\t\t\t\ta[action.payload] >\r\n\t\t\t\t\t\tb[action.payload]\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t})\r\n\t\t\t\treturn { ...state, loading: true, todoItems: sortedItems, orderColumn: state.orderColumns.find(x => x.column === action.payload) }\r\n\t\t\t}\r\n\r\n\t\tcase TODO_GET_LIST_SEARCH:\r\n\t\t\tif (action.payload === '') {\r\n\t\t\t\treturn { ...state, todoItems: state.allTodoItems };\r\n\t\t\t} else {\r\n\t\t\t\tconst keyword = action.payload.toLowerCase();\r\n\t\t\t\tconst searchItems = state.allTodoItems.filter((item) =>\r\n\t\t\t\t\titem.title.toLowerCase().indexOf(keyword) > -1 || item.detail.toLowerCase().indexOf(keyword) > -1 || item.status.toLowerCase().indexOf(keyword) > -1 || item.category.toLowerCase().indexOf(keyword) > -1 || item.label.toLowerCase().indexOf(keyword) > -1);\r\n\t\t\t\treturn { ...state, loading: true, todoItems: searchItems, searchKeyword: action.payload }\r\n\t\t\t}\r\n\r\n\t\tcase TODO_ADD_ITEM:\r\n\t\t\treturn { ...state, loading: false };\r\n\r\n\t\tcase TODO_ADD_ITEM_SUCCESS:\r\n\t\t\treturn { ...state, loading: true, allTodoItems: action.payload, todoItems: action.payload };\r\n\r\n\t\tcase TODO_ADD_ITEM_ERROR:\r\n\t\t\treturn { ...state, loading: true, error: action.payload };\r\n\r\n\t\tcase TODO_SELECTED_ITEMS_CHANGE:\r\n\t\t\treturn { ...state, loading: true, selectedItems: action.payload};\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}\r\n","import {\r\n\tCHAT_GET_CONTACTS,\r\n\tCHAT_GET_CONTACTS_SUCCESS,\r\n\tCHAT_GET_CONTACTS_ERROR,\r\n\tCHAT_GET_CONVERSATIONS,\r\n\tCHAT_GET_CONVERSATIONS_SUCCESS,\r\n\tCHAT_GET_CONVERSATIONS_ERROR,\r\n\tCHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n\tCHAT_CREATE_CONVERSATION,\r\n\tCHAT_SEARCH_CONTACT,\r\n\tCHAT_CHANGE_CONVERSATION\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n\tallContacts: null,\r\n\tcontacts: null,\r\n\tconversations: null,\r\n\terror: '',\r\n\tsearchKeyword: '',\r\n\tloadingContacts: false,\r\n\tloadingConversations: false,\r\n\tcurrentUser: null,\r\n\tselectedUser: null,\r\n\tselectedUserId: null\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase CHAT_GET_CONTACTS:\r\n\t\t\treturn { ...state, loadingContacts: false };\r\n\r\n\t\tcase CHAT_GET_CONTACTS_SUCCESS:\r\n\t\t\treturn { ...state, loadingContacts: true, allContacts: action.payload.contacts, contacts: action.payload.contacts, currentUser: action.payload.currentUser };\r\n\r\n\t\tcase CHAT_GET_CONTACTS_ERROR:\r\n\t\t\treturn { ...state, loadingContacts: false, error: action.payload };\r\n\r\n\r\n\t\tcase CHAT_GET_CONVERSATIONS:\r\n\t\t\treturn { ...state, loadingConversations: false };\r\n\r\n\t\tcase CHAT_GET_CONVERSATIONS_SUCCESS:\r\n\t\t\treturn { ...state, \r\n\t\t\t\tloadingConversations: true, \r\n\t\t\t\tconversations: action.payload.conversations, \r\n\t\t\t\tselectedUserId:  action.payload.selectedUser \r\n\t\t\t};\r\n\r\n\t\tcase CHAT_GET_CONVERSATIONS_ERROR:\r\n\t\t\treturn { ...state, loadingConversations: false, error: action.payload };\r\n\r\n\t\tcase CHAT_CHANGE_CONVERSATION:\r\n\t\t\treturn { ...state, selectedUser: state.allContacts.find(x => x.id === action.payload) };\r\n\r\n\r\n\t\tcase CHAT_ADD_MESSAGE_TO_CONVERSATION:\r\n\t\t\treturn { ...state };\r\n\r\n\t\tcase CHAT_CREATE_CONVERSATION:\r\n\t\t\treturn { ...state };\r\n\r\n\t\tcase CHAT_SEARCH_CONTACT:\r\n\t\t\tif (action.payload === '') {\r\n\t\t\t\treturn { ...state, contacts: state.allContacts };\r\n\t\t\t} else {\r\n\t\t\t\tconst keyword = action.payload.toLowerCase();\r\n\t\t\t\tconst searchedContacts = state.allContacts.filter((item) => item.name.toLowerCase().indexOf(keyword) > -1);\r\n\t\t\t\treturn { ...state, contacts: searchedContacts }\r\n\t\t\t}\r\n\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}\r\n","import {\r\n\tSURVEY_LIST_GET_LIST,\r\n\tSURVEY_LIST_GET_LIST_SUCCESS,\r\n\tSURVEY_LIST_GET_LIST_ERROR,\r\n\tSURVEY_LIST_GET_LIST_WITH_FILTER,\r\n\tSURVEY_LIST_GET_LIST_WITH_ORDER,\r\n\tSURVEY_LIST_GET_LIST_SEARCH,\r\n\tSURVEY_LIST_ADD_ITEM,\r\n\tSURVEY_LIST_ADD_ITEM_SUCCESS,\r\n\tSURVEY_LIST_ADD_ITEM_ERROR,\r\n\tSURVEY_LIST_SELECTED_ITEMS_CHANGE\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n\tallSurveyItems: null,\r\n\tsurveyItems: null,\r\n\terror: '',\r\n\tfilter: null,\r\n\tsearchKeyword: '',\r\n\torderColumn: null,\r\n\tloading: false,\r\n\tlabels: [\r\n\t\t{ label: \"EDUCATION\", color: \"secondary\" },\r\n\t\t{ label: \"NEW FRAMEWORK\", color: \"primary\" },\r\n\t\t{ label: \"PERSONAL\", color: \"info\" }\r\n\t],\r\n\torderColumns: [\r\n\t\t{ column: \"title\", label: \"Title\" },\r\n\t\t{ column: \"category\", label: \"Category\" },\r\n\t\t{ column: \"status\", label: \"Status\" },\r\n\t\t{ column: \"label\", label: \"Label\" },\r\n\t],\r\n\tcategories: [\"Development\", \"Worklplace\", \"Hardware\"],\r\n\tselectedItems: []\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase SURVEY_LIST_GET_LIST:\r\n\t\t\treturn { ...state, loading: false };\r\n\r\n\t\tcase SURVEY_LIST_GET_LIST_SUCCESS:\r\n\t\t\treturn { ...state, loading: true, allSurveyItems: action.payload, surveyItems: action.payload };\r\n\r\n\t\tcase SURVEY_LIST_GET_LIST_ERROR:\r\n\t\t\treturn { ...state, loading: true, error: action.payload };\r\n\r\n\t\tcase SURVEY_LIST_GET_LIST_WITH_FILTER:\r\n\t\t\tif (action.payload.column === '' || action.payload.value === '') {\r\n\t\t\t\treturn { ...state, loading: true, surveyItems: state.allSurveyItems, filter: null };\r\n\t\t\t} else {\r\n\t\t\t\tconst filteredItems = state.allSurveyItems.filter((item) =>\r\n\t\t\t\t\titem[action.payload.column] === action.payload.value);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state, loading: true, surveyItems: filteredItems, filter: {\r\n\t\t\t\t\t\tcolumn: action.payload.column,\r\n\t\t\t\t\t\tvalue: action.payload.value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\tcase SURVEY_LIST_GET_LIST_WITH_ORDER:\r\n\t\t\tif (action.payload === '') {\r\n\t\t\t\treturn { ...state, loading: true, surveyItems: state.surveyItems, orderColumn: null };\r\n\t\t\t} else {\r\n\t\t\t\tconst sortedItems = state.surveyItems.sort((a, b) => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\ta[action.payload] <\r\n\t\t\t\t\t\tb[action.payload]\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\telse if (\r\n\t\t\t\t\t\ta[action.payload] >\r\n\t\t\t\t\t\tb[action.payload]\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t})\r\n\t\t\t\treturn { ...state, loading: true, surveyItems: sortedItems, orderColumn: state.orderColumns.find(x => x.column === action.payload) }\r\n\t\t\t}\r\n\r\n\t\tcase SURVEY_LIST_GET_LIST_SEARCH:\r\n\t\t\tif (action.payload === '') {\r\n\t\t\t\treturn { ...state, surveyItems: state.allSurveyItems };\r\n\t\t\t} else {\r\n\t\t\t\tconst keyword = action.payload.toLowerCase();\r\n\t\t\t\tconst searchItems = state.allSurveyItems.filter((item) =>\r\n\t\t\t\t\titem.title.toLowerCase().indexOf(keyword) > -1 || item.detail.toLowerCase().indexOf(keyword) > -1 || item.status.toLowerCase().indexOf(keyword) > -1 || item.category.toLowerCase().indexOf(keyword) > -1 || item.label.toLowerCase().indexOf(keyword) > -1);\r\n\t\t\t\treturn { ...state, loading: true, surveyItems: searchItems, searchKeyword: action.payload }\r\n\t\t\t}\r\n\r\n\t\tcase SURVEY_LIST_ADD_ITEM:\r\n\t\t\treturn { ...state, loading: false };\r\n\r\n\t\tcase SURVEY_LIST_ADD_ITEM_SUCCESS:\r\n\t\t\treturn { ...state, loading: true, allSurveyItems: action.payload, surveyItems: action.payload };\r\n\r\n\t\tcase SURVEY_LIST_ADD_ITEM_ERROR:\r\n\t\t\treturn { ...state, loading: true, error: action.payload };\r\n\r\n\t\tcase SURVEY_LIST_SELECTED_ITEMS_CHANGE:\r\n\t\t\treturn { ...state, loading: true, selectedItems: action.payload};\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}\r\n","import {\r\n    SURVEY_GET_DETAILS,\r\n    SURVEY_GET_DETAILS_SUCCESS,\r\n\tSURVEY_GET_DETAILS_ERROR,\r\n\tSURVEY_DELETE_QUESTION,\r\n    SURVEY_SAVE\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n\tsurvey:null,\r\n\tloading:false\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase SURVEY_GET_DETAILS:\r\n\t\t\treturn { ...state, loading: false };\r\n\r\n\t\tcase SURVEY_GET_DETAILS_SUCCESS:\r\n\t\t\treturn { ...state, loading: true, survey: action.payload};\r\n\r\n\t\tcase SURVEY_GET_DETAILS_ERROR:\r\n\t\t\treturn { ...state, loading: true, error: action.payload };\r\n\r\n\t\t\tcase SURVEY_DELETE_QUESTION:\r\n\t\t\treturn { ...state,loading:false};\r\n\r\n\t\t\tcase SURVEY_SAVE:\r\n\t\t\treturn { ...state,loading:true,survey: action.payload};\r\n\t\t\t\r\n\r\n\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport settings from './settings/reducer';\r\nimport menu from './menu/reducer';\r\nimport authUser from './auth/reducer';\r\nimport todoApp from './todo/reducer';\r\nimport chatApp from './chat/reducer';\r\nimport surveyListApp from './surveyList/reducer';\r\nimport surveyDetailApp from './surveyDetail/reducer';\r\n\r\nconst reducers = combineReducers({\r\n  menu,\r\n  settings,\r\n  authUser,\r\n  todoApp,\r\n  chatApp,\r\n  surveyListApp,\r\n  surveyDetailApp\r\n});\r\n\r\nexport default reducers;","\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { auth } from '../../helpers/Firebase';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    LOGOUT_USER,\r\n    FORGOT_PASSWORD,\r\n    RESET_PASSWORD,\r\n} from '../actions';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserError,\r\n    registerUserSuccess,\r\n    registerUserError,\r\n    forgotPasswordSuccess,\r\n    forgotPasswordError,\r\n    resetPasswordSuccess,\r\n    resetPasswordError\r\n} from './actions';\r\n\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, loginWithEmailPassword);\r\n}\r\n\r\nconst loginWithEmailPasswordAsync = async (email, password) =>\r\n    await auth.signInWithEmailAndPassword(email, password)\r\n        .then(authUser => authUser)\r\n        .catch(error => error);\r\n\r\n\r\n\r\nfunction* loginWithEmailPassword({ payload }) {\r\n    const { email, password } = payload.user;\r\n    const { history } = payload;\r\n    try {\r\n        const loginUser = yield call(loginWithEmailPasswordAsync, email, password);\r\n        if (!loginUser.message) {\r\n            localStorage.setItem('user_id', loginUser.user.uid);\r\n            yield put(loginUserSuccess(loginUser.user));\r\n            history.push('/');\r\n        } else {\r\n            yield put(loginUserError(loginUser.message));\r\n        }\r\n    } catch (error) {\r\n        yield put(loginUserError(error));\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, registerWithEmailPassword);\r\n}\r\n\r\nconst registerWithEmailPasswordAsync = async (email, password) =>\r\n    await auth.createUserWithEmailAndPassword(email, password)\r\n        .then(authUser => authUser)\r\n        .catch(error => error);\r\n\r\nfunction* registerWithEmailPassword({ payload }) {\r\n    const { email, password } = payload.user;\r\n    const { history } = payload\r\n    try {\r\n        const registerUser = yield call(registerWithEmailPasswordAsync, email, password);\r\n        if (!registerUser.message) {\r\n            localStorage.setItem('user_id', registerUser.user.uid);\r\n            yield put(registerUserSuccess(registerUser));\r\n            history.push('/')\r\n        } else {\r\n            yield put(registerUserError(registerUser.message));\r\n\r\n        }\r\n    } catch (error) {\r\n        yield put(registerUserError(error));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nconst logoutAsync = async (history) => {\r\n    await auth.signOut().then(authUser => authUser).catch(error => error);\r\n    history.push('/')\r\n}\r\n\r\nfunction* logout({ payload }) {\r\n    const { history } = payload\r\n    try {\r\n        yield call(logoutAsync, history);\r\n        localStorage.removeItem('user_id');\r\n    } catch (error) {\r\n    }\r\n}\r\n\r\nexport function* watchForgotPassword() {\r\n    yield takeEvery(FORGOT_PASSWORD, forgotPassword);\r\n}\r\n\r\nconst forgotPasswordAsync = async (email) => {\r\n    return await auth.sendPasswordResetEmail(email)\r\n        .then(user => user)\r\n        .catch(error => error);\r\n}\r\n\r\nfunction* forgotPassword({ payload }) {\r\n    const { email } = payload.forgotUserMail;\r\n    try {\r\n        const forgotPasswordStatus = yield call(forgotPasswordAsync, email);\r\n        if (!forgotPasswordStatus) {\r\n            yield put(forgotPasswordSuccess(\"success\"));\r\n        } else {\r\n            yield put(forgotPasswordError(forgotPasswordStatus.message));\r\n        }\r\n    } catch (error) {\r\n        yield put(forgotPasswordError(error));\r\n\r\n    }\r\n}\r\n\r\nexport function* watchResetPassword() {\r\n    yield takeEvery(RESET_PASSWORD, resetPassword);\r\n}\r\n\r\nconst resetPasswordAsync = async (resetPasswordCode, newPassword) => {\r\n    return await auth.confirmPasswordReset(resetPasswordCode, newPassword)\r\n        .then(user => user)\r\n        .catch(error => error);\r\n}\r\n\r\nfunction* resetPassword({ payload }) {\r\n    const { newPassword, resetPasswordCode } = payload;\r\n    try {\r\n        const resetPasswordStatus = yield call(resetPasswordAsync, resetPasswordCode, newPassword);\r\n        if (!resetPasswordStatus) {\r\n            yield put(resetPasswordSuccess(\"success\"));\r\n        } else {\r\n            yield put(resetPasswordError(resetPasswordStatus.message));\r\n        }\r\n    } catch (error) {\r\n        yield put(resetPasswordError(error));\r\n\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(watchLoginUser),\r\n        fork(watchLogoutUser),\r\n        fork(watchRegisterUser),\r\n        fork(watchForgotPassword),\r\n        fork(watchResetPassword),\r\n    ]);\r\n}","import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { getDateWithFormat } from \"../../helpers/Utils\";\r\n\r\nimport { TODO_GET_LIST, TODO_ADD_ITEM } from \"../actions\";\r\n\r\nimport {\r\n  getTodoListSuccess,\r\n  getTodoListError,\r\n  addTodoItemSuccess,\r\n  addTodoItemError\r\n} from \"./actions\";\r\n\r\nimport todoData from \"../../data/todos.json\";\r\n\r\nconst getTodoListRequest = async () => {\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success(todoData.data);\r\n    }, 1000);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nfunction* getTodoListItems() {\r\n  try {\r\n    const response = yield call(getTodoListRequest);\r\n    yield put(getTodoListSuccess(response));\r\n  } catch (error) {\r\n    yield put(getTodoListError(error));\r\n  }\r\n}\r\n\r\nconst addTodoItemRequest = async item => {\r\n  let items = todoData.data;\r\n  item.id = items.length + 1;\r\n  item.createDate = getDateWithFormat();\r\n  items.splice(0, 0, item);\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success(items);\r\n    }, 1000);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nfunction* addTodoItem({ payload }) {\r\n  try {\r\n    const response = yield call(addTodoItemRequest, payload);\r\n    yield put(addTodoItemSuccess(response));\r\n  } catch (error) {\r\n    yield put(addTodoItemError(error));\r\n  }\r\n}\r\n\r\nexport function* watchGetList() {\r\n  yield takeEvery(TODO_GET_LIST, getTodoListItems);\r\n}\r\n\r\nexport function* wathcAddItem() {\r\n  yield takeEvery(TODO_ADD_ITEM, addTodoItem);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(watchGetList), fork(wathcAddItem)]);\r\n}\r\n","import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { getCurrentTime } from \"../../helpers/Utils\";\r\n\r\nimport {\r\n  CHAT_GET_CONTACTS,\r\n  CHAT_GET_CONVERSATIONS,\r\n  CHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n  CHAT_CREATE_CONVERSATION\r\n} from \"../actions\";\r\n\r\nimport {\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  getConversationsSuccess,\r\n  getConversationsError\r\n} from \"./actions\";\r\n\r\nimport contactsData from \"../../data/chat.contacts.json\";\r\nimport conversationsData from \"../../data/chat.conversations.json\";\r\n\r\nfunction* loadContacts() {\r\n  try {\r\n    const response = yield call(loadContactsAsync);\r\n    const { contacts, currentUser } = response;\r\n    yield put(getContactsSuccess(contacts, currentUser));\r\n  } catch (error) {\r\n    yield put(getContactsError(error));\r\n  }\r\n}\r\n\r\nconst loadContactsAsync = async () => {\r\n  const contacts = contactsData.data;\r\n  const currentUser = contacts[0];\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success({ contacts, currentUser });\r\n    }, 2000);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nfunction* loadConversations(userId) {\r\n  try {\r\n    const response = yield call(loadConversationsAsync, userId);\r\n    const { conversations, selectedUser } = response;\r\n    yield put(getConversationsSuccess(conversations, selectedUser));\r\n  } catch (error) {\r\n    yield put(getConversationsError(error));\r\n  }\r\n}\r\n\r\nconst loadConversationsAsync = async ({ payload }) => {\r\n  let conversations = conversationsData.data;\r\n  conversations = conversations.filter(x => x.users.includes(payload));\r\n  const selectedUser = conversations[0].users.find(x => x !== payload);\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success({ conversations, selectedUser });\r\n    }, 1000);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nfunction* addMessageToConversation({ payload }) {\r\n  try {\r\n    const {\r\n      currentUserId,\r\n      selectedUserId,\r\n      message,\r\n      allConversations\r\n    } = payload;\r\n\r\n    const response = yield call(\r\n      addMessageToConversationAsync,\r\n      currentUserId,\r\n      selectedUserId,\r\n      message,\r\n      allConversations\r\n    );\r\n    const { conversations, selectedUser } = response;\r\n    yield put(getConversationsSuccess(conversations, selectedUser));\r\n  } catch (error) {\r\n    yield put(getConversationsError(error));\r\n  }\r\n}\r\nconst addMessageToConversationAsync = async (\r\n  currentUserId,\r\n  selectedUserId,\r\n  message,\r\n  allConversations\r\n) => {\r\n  let conversation = allConversations.find(\r\n    x => x.users.includes(currentUserId) && x.users.includes(selectedUserId)\r\n  );\r\n  const time = getCurrentTime();\r\n  if (conversation) {\r\n    conversation.messages.push({\r\n      sender: currentUserId,\r\n      time: time,\r\n      text: message\r\n    });\r\n    conversation.lastMessageTime = time;\r\n    let conversations = allConversations.filter(x => x.id !== conversation.id);\r\n    conversations.splice(0, 0, conversation);\r\n\r\n    return await new Promise((success, fail) => {\r\n      setTimeout(() => {\r\n        success({ conversations, selectedUser: selectedUserId });\r\n      }, 500);\r\n    })\r\n      .then(response => response)\r\n      .catch(error => error);\r\n  }\r\n};\r\n\r\nfunction* createNewConversation({ payload }) {\r\n  try {\r\n    const { currentUserId, selectedUserId, allConversations } = payload;\r\n    const response = yield call(\r\n      createNewConversationAsync,\r\n      currentUserId,\r\n      selectedUserId,\r\n      allConversations\r\n    );\r\n    const { conversations, selectedUser } = response;\r\n    yield put(getConversationsSuccess(conversations, selectedUser));\r\n  } catch (error) {\r\n    yield put(getConversationsError(error));\r\n  }\r\n}\r\n\r\nconst createNewConversationAsync = async (\r\n  currentUserId,\r\n  selectedUserId,\r\n  allConversations\r\n) => {\r\n  let conversation = {\r\n    id: allConversations.length + 1,\r\n    users: [currentUserId, selectedUserId],\r\n    lastMessageTime: \"-\",\r\n    messages: []\r\n  };\r\n\r\n  allConversations.splice(0, 0, conversation);\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success({\r\n        conversations: allConversations,\r\n        selectedUser: selectedUserId\r\n      });\r\n    }, 500);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nexport function* watchGetContact() {\r\n  yield takeEvery(CHAT_GET_CONTACTS, loadContacts);\r\n}\r\nexport function* watchGetConversation() {\r\n  yield takeEvery(CHAT_GET_CONVERSATIONS, loadConversations);\r\n}\r\nexport function* watchAddMessageToConversation() {\r\n  yield takeEvery(CHAT_ADD_MESSAGE_TO_CONVERSATION, addMessageToConversation);\r\n}\r\nexport function* watchCreateConversation() {\r\n  yield takeEvery(CHAT_CREATE_CONVERSATION, createNewConversation);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchGetContact),\r\n    fork(watchGetConversation),\r\n    fork(watchAddMessageToConversation),\r\n    fork(watchCreateConversation)\r\n  ]);\r\n}\r\n","import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { getDateWithFormat } from \"../../helpers/Utils\";\r\n\r\nimport {\r\n  SURVEY_LIST_GET_LIST,\r\n  SURVEY_LIST_ADD_ITEM\r\n} from \"../actions\";\r\n\r\nimport {\r\n  getSurveyListSuccess,\r\n  getSurveyListError,\r\n  addSurveyItemSuccess,\r\n  addSurveyItemError\r\n} from \"./actions\";\r\n\r\nimport surveyListData from \"../../data/survey.list.json\";\r\n\r\nconst getSurveyListRequest = async () => {\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success(surveyListData.data);\r\n    }, 1000);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nfunction* getSurveyListItems() {\r\n  try {\r\n    const response = yield call(getSurveyListRequest);\r\n    yield put(getSurveyListSuccess(response));\r\n  } catch (error) {\r\n    yield put(getSurveyListError(error));\r\n  }\r\n}\r\n\r\nconst addSurveyItemRequest = async item => {\r\n  let items = surveyListData.data;\r\n  item.id = items.length + 1;\r\n  item.createDate = getDateWithFormat();\r\n  items.splice(0, 0, item);\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success(items);\r\n    }, 1000);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nfunction* addSurveyItem({ payload }) {\r\n  try {\r\n    const response = yield call(addSurveyItemRequest, payload);\r\n    yield put(addSurveyItemSuccess(response));\r\n  } catch (error) {\r\n    yield put(addSurveyItemError(error));\r\n  }\r\n}\r\n\r\nexport function* watchGetList() {\r\n  yield takeEvery(SURVEY_LIST_GET_LIST, getSurveyListItems);\r\n}\r\n\r\nexport function* wathcAddItem() {\r\n  yield takeEvery(SURVEY_LIST_ADD_ITEM, addSurveyItem);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(watchGetList), fork(wathcAddItem)]);\r\n}\r\n","\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport {\r\n\tSURVEY_GET_DETAILS,\r\n\tSURVEY_DELETE_QUESTION\r\n} from '../actions';\r\n\r\nimport {\r\n\tgetSurveyDetailSuccess,\r\n\tgetSurveyDetailError,\r\n\tsaveSurvey\r\n} from './actions';\r\n\r\nimport surveyDetailData from '../../data/survey.detail.json';\r\n\r\n\r\nconst getSurveyDetailRequest = async () => {\r\n\t\treturn await new Promise((success, fail) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsuccess(surveyDetailData.data);\r\n\t\t\t}, 1000);\r\n\t\t})\r\n\t\t\t.then(response => response)\r\n\t\t\t.catch(error => error);\r\n\r\n}\r\n\r\nconst deleteQuestionRequest = async (quesitonId, survey) => {\r\n\r\n\t\tsurvey.questions = survey.questions.filter(x => x.id !== quesitonId);\r\n\t\treturn await new Promise((success, fail) => {\r\n\t\t\tsuccess(survey);\r\n\t\t})\r\n\t\t\t.then(response => response)\r\n\t\t\t.catch(error => error);\r\n\t\r\n}\r\n\r\n\r\nfunction* getSurveyDetailItems() {\r\n\ttry {\r\n\t\tconst response = yield call(getSurveyDetailRequest);\r\n\t\tyield put(getSurveyDetailSuccess(response));\r\n\t} catch (error) {\r\n\t\tyield put(getSurveyDetailError(error));\r\n\t}\r\n}\r\n\r\nfunction* deleteQuestion({ payload }) {\r\n\ttry {\r\n\t\tconst { questionId, survey } = payload;\r\n\t\tconst response = yield call(deleteQuestionRequest, questionId, survey);\r\n\t\tyield put(saveSurvey(response));\r\n\t} catch (error) {\r\n\t\tyield put(getSurveyDetailError(error));\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport function* watchGetDetail() {\r\n\tyield takeEvery(SURVEY_GET_DETAILS, getSurveyDetailItems);\r\n}\r\n\r\nexport function* watchDeleteQuestion() {\r\n\tyield takeEvery(SURVEY_DELETE_QUESTION, deleteQuestion);\r\n}\r\n\r\n\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([\r\n\t\tfork(watchGetDetail),\r\n\t\tfork(watchDeleteQuestion),\r\n\t]);\r\n}","import { all } from 'redux-saga/effects';\r\nimport authSagas from './auth/saga';\r\nimport todoSagas from './todo/saga';\r\nimport chatSagas from './chat/saga';\r\nimport surveyListSagas from './surveyList/saga';\r\nimport surveyDetailSagas from './surveyDetail/saga';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    authSagas(),\r\n    todoSagas(),\r\n    chatSagas(),\r\n    surveyListSagas(),\r\n    surveyDetailSagas()\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport reducers from './reducers';\r\nimport sagas from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState) {\r\n\r\n    const store = createStore(\r\n        reducers,\r\n        initialState,\r\n        compose(applyMiddleware(...middlewares))\r\n    );\r\n\r\n    sagaMiddleware.run(sagas);\r\n\r\n    if (module.hot) {\r\n        module.hot.accept('./reducers', () => {\r\n            const nextRootReducer = require('./reducers');\r\n            store.replaceReducer(nextRootReducer);\r\n        });\r\n    }\r\n\r\n    return store;\r\n}\r\n","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nconst App = React.lazy(() => import(/* webpackChunkName: \"App\" */'./App' ));\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <Suspense fallback={<div className=\"loading\" />}>\r\n      <App />\r\n    </Suspense>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n/*\r\n * If you want your app to work offline and load faster, you can change\r\n * unregister() to register() below. Note this comes with some pitfalls.\r\n * Learn more about service workers: https://bit.ly/CRA-PWA\r\n */\r\nserviceWorker.unregister();\r\n","import {\r\n    TODO_GET_LIST,\r\n    TODO_GET_LIST_SUCCESS,\r\n    TODO_GET_LIST_ERROR,\r\n    TODO_GET_LIST_WITH_FILTER,\r\n    TODO_GET_LIST_WITH_ORDER,\r\n    TODO_GET_LIST_SEARCH,\r\n    TODO_ADD_ITEM,\r\n    TODO_ADD_ITEM_SUCCESS,\r\n    TODO_ADD_ITEM_ERROR,\r\n    TODO_SELECTED_ITEMS_CHANGE\r\n} from '../actions';\r\n\r\n\r\nexport const getTodoList = () => ({\r\n    type: TODO_GET_LIST\r\n});\r\n\r\nexport const getTodoListSuccess = (items) => ({\r\n    type: TODO_GET_LIST_SUCCESS,\r\n    payload: items\r\n});\r\n\r\nexport const getTodoListError = (error) => ({\r\n    type: TODO_GET_LIST_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const getTodoListWithFilter = (column, value) => ({\r\n    type: TODO_GET_LIST_WITH_FILTER,\r\n    payload: { column, value }\r\n});\r\n\r\nexport const getTodoListWithOrder = (column) => ({\r\n    type: TODO_GET_LIST_WITH_ORDER,\r\n    payload: column\r\n});\r\n\r\nexport const getTodoListSearch = (keyword) => ({\r\n    type: TODO_GET_LIST_SEARCH,\r\n    payload: keyword\r\n});\r\n\r\nexport const addTodoItem = (item) => ({\r\n    type: TODO_ADD_ITEM,\r\n    payload: item\r\n});\r\n\r\nexport const addTodoItemSuccess = (items) => ({\r\n    type: TODO_ADD_ITEM_SUCCESS,\r\n    payload: items\r\n});\r\n\r\nexport const addTodoItemError = (error) => ({\r\n    type: TODO_ADD_ITEM_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const selectedTodoItemsChange = (selectedItems) => ({\r\n    type: TODO_SELECTED_ITEMS_CHANGE,\r\n    payload: selectedItems\r\n});\r\n","import {\r\n    SURVEY_LIST_GET_LIST,\r\n    SURVEY_LIST_GET_LIST_SUCCESS,\r\n    SURVEY_LIST_GET_LIST_ERROR,\r\n    SURVEY_LIST_GET_LIST_WITH_FILTER,\r\n    SURVEY_LIST_GET_LIST_WITH_ORDER,\r\n    SURVEY_LIST_GET_LIST_SEARCH,\r\n    SURVEY_LIST_ADD_ITEM,\r\n    SURVEY_LIST_ADD_ITEM_SUCCESS,\r\n    SURVEY_LIST_ADD_ITEM_ERROR,\r\n    SURVEY_LIST_SELECTED_ITEMS_CHANGE\r\n} from '../actions';\r\n\r\n\r\nexport const getSurveyList = () => ({\r\n    type: SURVEY_LIST_GET_LIST\r\n});\r\n\r\nexport const getSurveyListSuccess = (items) => ({\r\n    type: SURVEY_LIST_GET_LIST_SUCCESS,\r\n    payload: items\r\n});\r\n\r\nexport const getSurveyListError = (error) => ({\r\n    type: SURVEY_LIST_GET_LIST_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const getSurveyListWithFilter = (column, value) => ({\r\n    type: SURVEY_LIST_GET_LIST_WITH_FILTER,\r\n    payload: { column, value }\r\n});\r\n\r\nexport const getSurveyListWithOrder = (column) => ({\r\n    type: SURVEY_LIST_GET_LIST_WITH_ORDER,\r\n    payload: column\r\n});\r\n\r\nexport const getSurveyListSearch = (keyword) => ({\r\n    type: SURVEY_LIST_GET_LIST_SEARCH,\r\n    payload: keyword\r\n});\r\n\r\nexport const addSurveyItem = (item) => ({\r\n    type: SURVEY_LIST_ADD_ITEM,\r\n    payload: item\r\n});\r\n\r\nexport const addSurveyItemSuccess = (items) => ({\r\n    type: SURVEY_LIST_ADD_ITEM_SUCCESS,\r\n    payload: items\r\n});\r\n\r\nexport const addSurveyItemError = (error) => ({\r\n    type: SURVEY_LIST_ADD_ITEM_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const selectedSurveyItemsChange = (selectedItems) => ({\r\n    type: SURVEY_LIST_SELECTED_ITEMS_CHANGE,\r\n    payload: selectedItems\r\n});\r\n","import {\r\n    SURVEY_GET_DETAILS,\r\n    SURVEY_GET_DETAILS_SUCCESS,\r\n    SURVEY_GET_DETAILS_ERROR,\r\n    SURVEY_DELETE_QUESTION,\r\n    SURVEY_SAVE\r\n} from '../actions';\r\n\r\n\r\nexport const getSurveyDetail = () => ({\r\n    type: SURVEY_GET_DETAILS\r\n});\r\n\r\nexport const getSurveyDetailSuccess = (items) => ({\r\n    type: SURVEY_GET_DETAILS_SUCCESS,\r\n    payload: items\r\n});\r\n\r\nexport const getSurveyDetailError = (error) => ({\r\n    type: SURVEY_GET_DETAILS_ERROR,\r\n    payload: error\r\n});\r\n\r\n\r\nexport const deleteSurveyQuestion = (questionId,survey) => ({\r\n    type: SURVEY_DELETE_QUESTION,\r\n    payload: {questionId,survey}\r\n});\r\n\r\nexport const saveSurvey = (survey) => ({\r\n    type: SURVEY_SAVE,\r\n    payload: survey\r\n});","import { defaultDirection } from \"../constants/defaultValues\";\r\n\r\nexport const mapOrder = (array, order, key) => {\r\n  array.sort(function(a, b) {\r\n    var A = a[key],\r\n      B = b[key];\r\n    if (order.indexOf(A + \"\") > order.indexOf(B + \"\")) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  });\r\n  return array;\r\n};\r\n\r\nexport const getDateWithFormat = () => {\r\n  const today = new Date();\r\n  let dd = today.getDate();\r\n  let mm = today.getMonth() + 1; //January is 0!\r\n\r\n  var yyyy = today.getFullYear();\r\n  if (dd < 10) {\r\n    dd = \"0\" + dd;\r\n  }\r\n  if (mm < 10) {\r\n    mm = \"0\" + mm;\r\n  }\r\n  return dd + \".\" + mm + \".\" + yyyy;\r\n};\r\n\r\nexport const getCurrentTime = () => {\r\n  const now = new Date();\r\n  return now.getHours() + \":\" + now.getMinutes();\r\n};\r\n\r\nexport const getDirection = () => {\r\n  let direction = defaultDirection;\r\n  if (localStorage.getItem(\"direction\")) {\r\n    const localValue = localStorage.getItem(\"direction\");\r\n    if (localValue === \"rtl\" || localValue === \"ltr\") {\r\n      direction = localValue;\r\n    }\r\n  }\r\n  return {\r\n    direction,\r\n    isRtl: direction === \"rtl\"\r\n  };\r\n};\r\n\r\nexport const setDirection = localValue => {\r\n  let direction = \"ltr\";\r\n  if (localValue === \"rtl\" || localValue === \"ltr\") {\r\n    direction = localValue;\r\n  }\r\n  localStorage.setItem(\"direction\", direction);\r\n};\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nimport {firebaseConfig} from '../constants/defaultValues'\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\n\r\nexport {\r\n   auth,\r\n   database\r\n};\r\n","import \"./assets/css/vendor/bootstrap.min.css\";\r\nimport \"./assets/css/vendor/bootstrap.rtl.only.min.css\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"react-table/react-table.css\";\r\nimport 'react-image-lightbox/style.css';\r\nimport \"video.js/dist/video-js.css\";\r\nimport { isMultiColorActive, defaultColor,themeColorStorageKey,isDarkSwitchActive } from \"./constants/defaultValues\";\r\n\r\nconst color =\r\n  (isMultiColorActive||isDarkSwitchActive ) && localStorage.getItem(themeColorStorageKey)\r\n    ? localStorage.getItem(themeColorStorageKey)\r\n    : defaultColor;\r\n\r\nlocalStorage.setItem(themeColorStorageKey, color);\r\n\r\nlet render = () => {\r\n  import('./assets/css/sass/themes/gogo.' + color + '.scss').then(x => {\r\n     require('./AppRenderer');\r\n  });\r\n};\r\nrender();"],"sourceRoot":""}