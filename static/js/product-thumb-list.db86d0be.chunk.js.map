{"version":3,"sources":["components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js","components/common/CustomSelectInput.js","containers/pages/Pagination.js","containers/pages/DataListView.js","containers/pages/ContextMenuContainer.js","containers/pages/ListPageHeading.js","containers/pages/ImageListView.js","containers/pages/ThumbListView.js","containers/pages/AddNewModal.js","views/app/pages/product/thumb-list.js"],"names":["Colxx","props","widths","Separator","className","getMenuTitle","sub","id","getUrl","path","index","split","BreadcrumbItems","match","substr","paths","length","indexOf","filter","x","map","key","active","to","BreadcrumbContainer","heading","CustomSelectInput","customProps","Object","assign","autoCorrect","autoCapitalize","Input","Pagination","e","this","onChangePage","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","xxs","onClick","React","Component","memo","product","isSelect","collect","onCheckItem","data","event","classnames","title","category","date","color","statusColor","pill","status","type","checked","onChange","label","ContextMenuContainer","onContextMenu","onContextMenuClick","onShow","detail","action","ListPageHeading","toggleDisplayOptions","setState","prevState","displayOptionsIsOpen","toggleSplit","dropdownSplitOpen","state","messages","intl","displayMode","changeDisplayMode","handleChangeSelectAll","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","startIndex","endIndex","selectedItemsLength","itemsLength","onSearchKey","orderOptions","pageSizes","toggleModal","size","isOpen","toggle","caret","right","href","order","column","name","placeholder","onKeyPress","injectIntl","sm","lg","xl","top","alt","src","img","AddNewModal","modalOpen","categories","wrapClassName","backdrop","components","classNamePrefix","options","outline","apiUrl","servicePath","ImageListPages","find","dataListRender","mode","page","search","target","value","toLowerCase","tagName","parentElement","lastChecked","selectedItems","includes","shiftKey","items","start","getIndex","end","slice","Math","min","max","item","Array","from","Set","document","activeElement","blur","isToggle","console","log","clickedProductId","mouseTrap","require","isLoading","bind","unbind","arr","prop","axios","get","then","res","totalItem"],"mappings":"iHAAA,iGAEMA,EAAQ,SAACC,GAAD,OACV,kBAAC,IAAD,iBAASA,EAAT,CAAgBC,OAAQ,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,WAE5DC,EAAY,SAACF,GAAD,OACd,yBAAKG,UAAS,oBAAeH,EAAMG,e,iCCNvC,wDAKMC,EAAe,SAAAC,GACnB,OAAO,kBAAC,IAAD,CAAcC,GAAE,eAAUD,MAG7BE,EAAS,SAACC,EAAMH,EAAKI,GACzB,OAAc,IAAVA,EACK,GAEAD,EAAKE,MAAML,GAAK,GAAKA,GAanBM,EAAkB,SAAC,GAAe,IACvCH,EADsC,EAAZI,MACbJ,KAAKK,OAAO,GAC3BC,EAAQN,EAAKE,MAAM,KAIvB,OAHII,EAAMA,EAAMC,OAAS,GAAGC,QAAQ,MAAQ,IAC1CF,EAAQA,EAAMG,QAAO,SAAAC,GAAC,OAAwB,IAApBA,EAAEF,QAAQ,SAGpC,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAYb,UAAU,iEACnBW,EAAMK,KAAI,SAACd,EAAKI,GACf,OACE,kBAAC,IAAD,CAAgBW,IAAKX,EAAOY,OAAQP,EAAMC,SAAWN,EAAQ,GAC1DK,EAAMC,SAAWN,EAAQ,EACxB,kBAAC,IAAD,CAASa,GAAI,IAAMf,EAAOC,EAAMH,EAAKI,IAClCL,EAAaC,IAGhBD,EAAaC,UAUdkB,IApCa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASZ,EAAY,EAAZA,MACtC,OACE,kBAAC,WAAD,KACGY,GAAW,4BAAI,kBAAC,IAAD,CAAclB,GAAIkB,KAClC,kBAACb,EAAD,CAAiBC,MAAOA,O,iCCrB9B,6BAUea,IAPW,SAAAzB,GACxB,IAAI0B,EAAcC,OAAOC,OAAO,GAAI5B,GAGpC,cAFO0B,EAAYG,mBACZH,EAAYI,eACZ,kBAAC,IAAWC,MAAUL,K,sICJzBM,E,kOAESC,GACXC,KAAKlC,MAAMmC,aAAaF,K,+BAEhB,IAAD,SAOHC,KAAKlC,MAPF,IAELoC,iBAFK,MAEO,EAFP,MAGLC,mBAHK,MAGS,EAHT,MAILC,mBAJK,MAIS,EAJT,MAKLC,oBALK,aAMLC,qBANK,SASHC,EAAa,EACbC,EAAWJ,EAEXA,EAAcF,GAChBK,EAAa,EACbC,EAAWN,GACFC,GAAeM,SAASL,EAAc,EAAG,KAClDG,EAAa,EACbC,EAAWJ,GACFD,EAAcM,SAASL,EAAc,EAAG,KAAOF,GACxDK,EAAaJ,EAAcM,SAASL,EAAc,EAAG,IACrDI,EAAWL,EAAcM,SAASL,EAAc,EAAG,MAEnDG,EAAaL,GAAaE,EAAc,GACxCI,EAAWN,GAIb,IADA,IAAMQ,EAAS,GACNC,EAFTJ,EAA4B,IAAfA,EAAmB,EAAIA,EAEXI,GAAKH,EAAUG,IACtCD,EAAOE,KAAKD,GAGd,IAAIE,EAA2BV,GAAe,EAAI,WAAa,GAC3DW,EAA0BX,GAAeD,EAAY,WAAa,GAClEa,EAA0BZ,GAAe,EAAI,WAAa,GAC1Da,EAA0Bb,GAAeD,EAAY,WAAa,GACtE,OAAOA,EAAY,EACjB,kBAAC,IAAD,CAAOe,IAAI,KAAKhD,UAAU,QACxB,kBAAC,IAAD,CAAKA,UAAU,qCACZqC,GACC,kBAAC,IAAD,CAASrC,UAAS,oBAAe4C,IAC/B,kBAAC,IAAD,CACE5C,UAAU,kBACViD,QAAS,kBAAM,EAAKjB,aAAa,KACjC,uBAAGhC,UAAU,gCAKnB,kBAAC,IAAD,CAASA,UAAS,oBAAe8C,IAC/B,kBAAC,IAAD,CACE9C,UAAU,iBACViD,QAAS,kBAAM,EAAKjB,aAAaE,EAAc,KAE/C,uBAAGlC,UAAU,6BAGhByC,EAAOzB,KAAI,SAAA0B,GACV,OACE,kBAAC,IAAD,CACEzB,IAAKyB,EACL1C,UAAS,oBAAekC,IAAgBQ,GAAK,WAC7C,kBAAC,IAAD,CACE1C,UAAU,YACViD,QAAS,kBAAM,EAAKjB,aAAaU,KAEhCA,OAKT,kBAAC,IAAD,CAAS1C,UAAS,oBAAe+C,IAC/B,kBAAC,IAAD,CACE/C,UAAU,iBACViD,QAAS,kBAAM,EAAKjB,aAAaE,EAAc,KAE/C,uBAAGlC,UAAU,8BAGhBoC,GACC,kBAAC,IAAD,CAASpC,UAAS,oBAAe6C,IAC/B,kBAAC,IAAD,CACE7C,UAAU,iBACViD,QAAS,kBAAM,EAAKjB,aAAaC,KACjC,uBAAGjC,UAAU,gCAOvB,kBAAC,IAAD,CAAOgD,IAAI,KAAKhD,UAAU,a,GA/FPkD,IAAMC,WAoGhBtB,O,iCCvGf,4FAsDeqB,QAAME,MA/CA,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAClD,OACE,kBAAC,IAAD,CAAOR,IAAI,KAAKhD,UAAU,QACxB,kBAAC,IAAD,CAAoBG,GAAG,UAAUsD,KAAMJ,EAAQlD,GAAIoD,QAASA,GAC1D,kBAAC,IAAD,CACEN,QAAS,SAAAS,GAAK,OAAIF,EAAYE,EAAOL,EAAQlD,KAC7CH,UAAW2D,IAAW,kBAAmB,CACvCzC,OAAQoC,KAGV,yBAAKtD,UAAU,0CACb,yBAAKA,UAAU,2HACb,kBAAC,IAAD,CAASmB,GAAE,aAAQkC,EAAQlD,IAAMH,UAAU,iBACzC,uBAAGA,UAAU,mCACVqD,EAAQO,QAGb,uBAAG5D,UAAU,4CACVqD,EAAQQ,UAEX,uBAAG7D,UAAU,4CACVqD,EAAQS,MAEX,yBAAK9D,UAAU,iBACb,kBAAC,IAAD,CAAO+D,MAAOV,EAAQW,YAAaC,MAAI,GACpCZ,EAAQa,UAIf,yBAAKlE,UAAU,8DACb,kBAAC,IAAD,CACEA,UAAU,kBACVmE,KAAK,WACLhE,GAAE,gBAAWkD,EAAQlD,IACrBiE,QAASd,EACTe,SAAU,aACVC,MAAM,c,iCC3CtB,6BAsBeC,IAnBc,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,cAAcC,EAAwB,EAAxBA,mBAC3C,OACE,kBAAC,IAAD,CACEtE,GAAG,UACHuE,OAAQ,SAAA5C,GAAC,OAAI0C,EAAc1C,EAAGA,EAAE6C,OAAOlB,QAEvC,kBAAC,IAAD,CAAUR,QAASwB,EAAoBhB,KAAM,CAAEmB,OAAQ,SACrD,uBAAG5E,UAAU,qBADf,IACqC,uCAErC,kBAAC,IAAD,CAAUiD,QAASwB,EAAoBhB,KAAM,CAAEmB,OAAQ,SACrD,uBAAG5E,UAAU,uBADf,IACuC,kDAEvC,kBAAC,IAAD,CAAUiD,QAASwB,EAAoBhB,KAAM,CAAEmB,OAAQ,WACrD,uBAAG5E,UAAU,sBADf,IACsC,4C,gOCOtC6E,E,YACJ,WAAYhF,GAAQ,IAAD,8BACjB,+CAOFiF,qBAAuB,WACrB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BC,sBAAuBD,EAAUC,0BAVlB,EAanBC,YAAa,WACX,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BG,mBAAoBH,EAAUG,uBAbhC,EAAKC,MAAQ,CACXD,mBAAmB,EACnBF,sBAAsB,GAJP,E,sEAmBT,IACAI,EAAatD,KAAKlC,MAAMyF,KAAxBD,SADD,EAqBHtD,KAAKlC,MAlBP0F,EAHK,EAGLA,YACAC,EAJK,EAILA,kBACAC,EALK,EAKLA,sBACAC,EANK,EAMLA,cACAC,EAPK,EAOLA,eACAC,EARK,EAQLA,iBACAC,EATK,EASLA,eACAC,EAVK,EAULA,oBACArF,EAXK,EAWLA,MACAsF,EAZK,EAYLA,WACAC,EAbK,EAaLA,SACAC,EAdK,EAcLA,oBACAC,EAfK,EAeLA,YACAC,EAhBK,EAgBLA,YACAC,EAjBK,EAiBLA,aACAC,EAlBK,EAkBLA,UACAC,EAnBK,EAmBLA,YACAjF,EApBK,EAoBLA,QApBK,EAuB6CU,KAAKqD,MAAjDH,EAvBD,EAuBCA,qBAAsBE,EAvBvB,EAuBuBA,kBAC9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOnC,IAAI,MACT,yBAAKhD,UAAU,QACb,4BACE,kBAAC,IAAD,CAAcG,GAAIkB,KAGpB,yBAAKrB,UAAU,wCACb,kBAAC,IAAD,CACE+D,MAAM,UACNwC,KAAK,KACLvG,UAAU,mBACViD,QAAS,kBAAIqD,MACb,kBAAC,IAAD,CAAcnG,GAAG,mBAElB,KACD,kBAAC,IAAD,CACEqG,OAAQrB,EACRsB,OAAQ1E,KAAKmD,aACb,yBAAKlF,UAAU,2DACX,kBAAC,IAAD,CACEA,UAAU,sCACVmE,KAAK,WACLhE,GAAG,WACHiE,QAAS6B,GAAuBC,EAChC7B,SAAU,kBAAMoB,GAAsB,IACtCnB,MACE,0BACEtE,UAAS,+BACPiG,EAAsB,GACtBA,EAAsBC,EAClB,gBACA,SAMhB,kBAAC,IAAD,CACEQ,OAAK,EACL3C,MAAM,UACN/D,UAAU,iCACZ,kBAAC,IAAD,CAAc2G,OAAK,GACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcxG,GAAG,kBAEnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcA,GAAG,6BAKzB,kBAAC,IAAD,CAAYM,MAAOA,KAGrB,yBAAKT,UAAU,QACb,kBAAC,IAAD,CACE+D,MAAM,QACN/D,UAAU,qCACViD,QAASlB,KAAK+C,sBAEd,kBAAC,IAAD,CAAc3E,GAAG,0BAA2B,IAC5C,uBAAGH,UAAU,yCAEf,kBAAC,IAAD,CACEwG,OAAQvB,EACRjF,UAAU,aACVG,GAAG,kBACH,0BAAMH,UAAU,qCACd,uBACE4G,KAAK,KACL5G,UAAS,yBACS,SAAhBuF,EAAyB,SAAW,IAEtCtC,QAAS,kBAAMuC,EAAkB,UACjC,kBAAC,IAAD,OAEF,uBACEoB,KAAK,KACL5G,UAAS,yBACS,cAAhBuF,EAA8B,SAAW,IAE3CtC,QAAS,kBAAMuC,EAAkB,eACjC,kBAAC,IAAD,OAEF,uBACEoB,KAAK,KACL5G,UAAS,yBACS,cAAhBuF,EAA8B,SAAW,IAE3CtC,QAAS,kBAAMuC,EAAkB,eACjC,kBAAC,IAAD,QAIJ,yBAAKxF,UAAU,kCACb,kBAAC,IAAD,CAAsBA,UAAU,qCAC9B,kBAAC,IAAD,CAAgB0G,OAAK,EAAC3C,MAAM,eAAewC,KAAK,MAC9C,kBAAC,IAAD,CAAcpG,GAAG,kBAChB2F,EAAoBxB,OAEvB,kBAAC,IAAD,KACG8B,EAAapF,KAAI,SAAC6F,EAAOvG,GACxB,OACE,kBAAC,IAAD,CACEW,IAAKX,EACL2C,QAAS,kBAAMyC,EAAcmB,EAAMC,UAElCD,EAAMvC,YAMjB,yBAAKtE,UAAU,8DACb,2BACEmE,KAAK,OACL4C,KAAK,UACL5G,GAAG,SACH6G,YAAa3B,EAAS,eACtB4B,WAAY,SAAAnF,GAAC,OAAIqE,EAAYrE,QAInC,yBAAK9B,UAAU,uBACb,0BAAMA,UAAU,8BAAhB,UAAiD+F,EAAjD,YAA+DC,EAA/D,eAA8EH,EAA9E,MACA,kBAAC,IAAD,CAAsB7F,UAAU,kBAC9B,kBAAC,IAAD,CAAgB0G,OAAK,EAAC3C,MAAM,eAAewC,KAAK,MAC7CX,GAEH,kBAAC,IAAD,CAAce,OAAK,GAChBN,EAAUrF,KAAI,SAACuF,EAAMjG,GACpB,OACE,kBAAC,IAAD,CACEW,IAAKX,EACL2C,QAAS,kBAAM0C,EAAeY,KAE7BA,WASjB,kBAAC,IAAD,CAAWvG,UAAU,e,GA/LDmD,aAsMf+D,gBAAWrC,I,iCC7N1B,yIAgEe3B,QAAME,MAhDC,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YACnD,OACE,kBAAC,IAAD,CAAO2D,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIrH,UAAU,OAAOiB,IAAKoC,EAAQlD,IACxD,kBAAC,IAAD,CAAoBA,GAAG,UAAUsD,KAAMJ,EAAQlD,GAAIoD,QAASA,GAC1D,kBAAC,IAAD,CACEN,QAAS,SAAAS,GAAK,OAAIF,EAAYE,EAAOL,EAAQlD,KAC7CH,UAAW2D,IAAW,CACpBzC,OAAQoC,KAGV,yBAAKtD,UAAU,qBACb,kBAAC,IAAD,CAASmB,GAAE,aAAQkC,EAAQlD,IAAMH,UAAU,iBACzC,kBAAC,IAAD,CAASsH,KAAG,EAACC,IAAKlE,EAAQO,MAAO4D,IAAKnE,EAAQoE,OAEhD,kBAAC,IAAD,CACE1D,MAAOV,EAAQW,YACfC,MAAI,EACJjE,UAAU,oCAETqD,EAAQa,SAGb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOlB,IAAI,KACT,kBAAC,IAAD,CACEhD,UAAU,kBACVmE,KAAK,WACLhE,GAAE,gBAAWkD,EAAQlD,IACrBiE,QAASd,EACTe,SAAU,aACVC,MAAM,MAEV,kBAAC,IAAD,CAAOtB,IAAI,KAAKhD,UAAU,QACxB,kBAAC,IAAD,KAAeqD,EAAQO,OACvB,kBAAC,IAAD,CAAU5D,UAAU,gDACjBqD,EAAQS,gB,iCCpD3B,4FA6DeZ,QAAME,MAtDC,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YACnD,OACE,kBAAC,IAAD,CAAOR,IAAI,KAAK/B,IAAKoC,EAAQlD,GAAIH,UAAU,QACzC,kBAAC,IAAD,CAAoBG,GAAG,UAAUsD,KAAMJ,EAAQlD,GAAIoD,QAASA,GAC1D,kBAAC,IAAD,CACEN,QAAS,SAAAS,GAAK,OAAIF,EAAYE,EAAOL,EAAQlD,KAC7CH,UAAW2D,IAAW,kBAAmB,CACvCzC,OAAQoC,KAGV,kBAAC,IAAD,CAASnC,GAAE,aAAQkC,EAAQlD,IAAMH,UAAU,UACzC,yBACEuH,IAAKlE,EAAQO,MACb4D,IAAKnE,EAAQoE,IACbzH,UAAU,sDAGd,yBAAKA,UAAU,0CACb,yBAAKA,UAAU,2HACb,kBAAC,IAAD,CAASmB,GAAE,aAAQkC,EAAQlD,IAAMH,UAAU,iBACzC,uBAAGA,UAAU,mCACVqD,EAAQO,QAGb,uBAAG5D,UAAU,4CACVqD,EAAQQ,UAEX,uBAAG7D,UAAU,4CACVqD,EAAQS,MAEX,yBAAK9D,UAAU,iBACb,kBAAC,IAAD,CAAO+D,MAAOV,EAAQW,YAAaC,MAAI,GACpCZ,EAAQa,UAIf,yBAAKlE,UAAU,8DACb,kBAAC,IAAD,CACEA,UAAU,kBACVmE,KAAK,WACLhE,GAAE,gBAAWkD,EAAQlD,IACrBiE,QAASd,EACTe,SAAU,aACVC,MAAM,c,iCClDtB,uHAyEeoD,IA1DK,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,UAAWrB,EAA8B,EAA9BA,YAAasB,EAAiB,EAAjBA,WAC7C,OACE,kBAAC,IAAD,CACEpB,OAAQmB,EACRlB,OAAQH,EACRuB,cAAc,cACdC,SAAS,UAET,kBAAC,IAAD,CAAarB,OAAQH,GACnB,kBAAC,IAAD,CAAcnG,GAAG,+BAEnB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcA,GAAG,wBAEnB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAOH,UAAU,QACf,kBAAC,IAAD,CAAcG,GAAG,oBAEnB,kBAAC,IAAD,CACE4H,WAAY,CAAEnG,MAAON,KACrBtB,UAAU,eACVgI,gBAAgB,eAChBjB,KAAK,kBACLkB,QAASL,IAEX,kBAAC,IAAD,CAAO5H,UAAU,QACf,kBAAC,IAAD,CAAcG,GAAG,uBAEnB,kBAAC,IAAD,CAAOgE,KAAK,WAAW4C,KAAK,OAAO5G,GAAG,gBACtC,kBAAC,IAAD,CAAOH,UAAU,QACf,kBAAC,IAAD,CAAcG,GAAG,kBAEnB,kBAAC,IAAD,CACEgE,KAAK,QACLhE,GAAG,gBACH4G,KAAK,cACLzC,MAAM,YAER,kBAAC,IAAD,CACEH,KAAK,QACLhE,GAAG,iBACH4G,KAAK,cACLzC,MAAM,eAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQP,MAAM,YAAYmE,SAAO,EAACjF,QAASqD,GACzC,kBAAC,IAAD,CAAcnG,GAAG,kBAEnB,kBAAC,IAAD,CAAQ4D,MAAM,UAAUd,QAASqD,GAC/B,kBAAC,IAAD,CAAcnG,GAAG,kBACT,Q,oNCrDlB,SAASoD,EAAQ1D,GACf,MAAO,CAAE4D,KAAM5D,EAAM4D,MAEvB,IAAM0E,EAASC,IAAc,gBAEvBC,E,YACJ,WAAYxI,GAAQ,IAAD,8BACjB,4CAAMA,KAoDRyG,YAAc,WACZ,EAAKvB,SAAS,CACZ4C,WAAY,EAAKvC,MAAMuC,aAvDR,EA2DnBjC,cAAgB,SAAAoB,GACd,EAAK/B,SACH,CACEe,oBAAqB,EAAKV,MAAMgB,aAAakC,MAC3C,SAAAvH,GAAC,OAAIA,EAAE+F,SAAWA,OAGtB,kBAAM,EAAKyB,qBAlEI,EAqEnB5C,eAAiB,SAAAY,GACf,EAAKxB,SACH,CACEa,iBAAkBW,EAClBrE,YAAa,IAEf,kBAAM,EAAKqG,qBA3EI,EA8EnB/C,kBAAoB,SAAAgD,GAIlB,OAHA,EAAKzD,SAAS,CACZQ,YAAaiD,KAER,GAlFU,EAoFnBxG,aAAe,SAAAyG,GACb,EAAK1D,SACH,CACE7C,YAAauG,IAEf,kBAAM,EAAKF,qBAzFI,EA6FnBpC,YAAc,SAAArE,GACE,UAAVA,EAAEb,KACJ,EAAK8D,SACH,CACE2D,OAAQ5G,EAAE6G,OAAOC,MAAMC,gBAEzB,kBAAM,EAAKN,qBAnGE,EAwGnB/E,YAAc,SAACE,EAAOvD,GACpB,GAC2B,MAAzBuD,EAAMiF,OAAOG,SACZpF,EAAMiF,OAAOI,eAAwD,MAAvCrF,EAAMiF,OAAOI,cAAcD,QAE1D,OAAO,EAEsB,OAA3B,EAAK1D,MAAM4D,aACb,EAAKjE,SAAS,CACZiE,YAAa7I,IAIjB,IAAI8I,EAAgB,EAAK7D,MAAM6D,cAU/B,GATIA,EAAcC,SAAS/I,GACzB8I,EAAgBA,EAAcnI,QAAO,SAAAC,GAAC,OAAIA,IAAMZ,KAEhD8I,EAActG,KAAKxC,GAErB,EAAK4E,SAAS,CACZkE,kBAGEvF,EAAMyF,SAAU,CAAC,IAAD,EACdC,EAAQ,EAAKhE,MAAMgE,MACnBC,EAAQ,EAAKC,SAASnJ,EAAIiJ,EAAO,MACjCG,EAAM,EAAKD,SAAS,EAAKlE,MAAM4D,YAAaI,EAAO,MACvDA,EAAQA,EAAMI,MAAMC,KAAKC,IAAIL,EAAOE,GAAME,KAAKE,IAAIN,EAAOE,GAAO,IACjE,EAAAN,GAActG,KAAd,oBACKyG,EAAMpI,KAAI,SAAA4I,GACX,OAAOA,EAAKzJ,QAGhB8I,EAAgBY,MAAMC,KAAK,IAAIC,IAAId,IACnC,EAAKlE,SAAS,CACZkE,kBAGJe,SAASC,cAAcC,QA9IN,EAyJnBzE,sBAAwB,SAAA0E,GAatB,OAZI,EAAK/E,MAAM6D,cAAcrI,QAAU,EAAKwE,MAAMgE,MAAMxI,OAClDuJ,GACF,EAAKpF,SAAS,CACZkE,cAAe,KAInB,EAAKlE,SAAS,CACZkE,cAAe,EAAK7D,MAAMgE,MAAMpI,KAAI,SAAAD,GAAC,OAAIA,EAAEZ,QAG/C6J,SAASC,cAAcC,QAChB,GAtKU,EAqMnBzF,mBAAqB,SAAC3C,EAAG2B,EAAMkF,GAC7ByB,QAAQC,IACN,sCACA,EAAKjF,MAAM6D,eAEbmB,QAAQC,IAAI,iCAAkC5G,EAAKmB,SA1MlC,EA6MnBJ,cAAgB,SAAC1C,EAAG2B,GAClB,IAAM6G,EAAmB7G,EAAKA,KAO9B,OANK,EAAK2B,MAAM6D,cAAcC,SAASoB,IACrC,EAAKvF,SAAS,CACZkE,cAAe,CAACqB,MAIb,GAnNP,EAAKC,UAAYC,EAAQ,KACzB,EAAKpF,MAAQ,CACXG,YAAa,YAEbK,iBAAkB,EAClBQ,aAAc,CACZ,CAAEU,OAAQ,QAASxC,MAAO,gBAC1B,CAAEwC,OAAQ,WAAYxC,MAAO,YAC7B,CAAEwC,OAAQ,SAAUxC,MAAO,WAE7B+B,UAAW,CAAC,EAAG,GAAI,IAEnBuB,WAAY,CACV,CAAEtD,MAAO,QAASsE,MAAO,QAAS3H,IAAK,GACvC,CAAEqD,MAAO,WAAYsE,MAAO,WAAY3H,IAAK,GAC7C,CAAEqD,MAAO,WAAYsE,MAAO,WAAY3H,IAAK,IAG/C6E,oBAAqB,CAAEgB,OAAQ,QAASxC,MAAO,gBAC/Ca,mBAAmB,EACnBwC,WAAW,EACXzF,YAAa,EACb2D,eAAgB,EAChB5D,UAAW,EACXyG,OAAQ,GACRO,cAAe,GACfD,YAAa,KACbyB,WAAW,GA7BI,E,iFAiCE,IAAD,OAClB1I,KAAKwG,iBACLxG,KAAKwI,UAAUG,KAAK,CAAC,SAAU,cAAc,kBAC3C,EAAKjF,uBAAsB,MAE7B1D,KAAKwI,UAAUG,KAAK,CAAC,SAAU,cAAc,WAI3C,OAHA,EAAK3F,SAAS,CACZkE,cAAe,MAEV,O,6CAKTlH,KAAKwI,UAAUI,OAAO,UACtB5I,KAAKwI,UAAUI,OAAO,aACtB5I,KAAKwI,UAAUI,OAAO,UACtB5I,KAAKwI,UAAUI,OAAO,e,+BA+Ff/B,EAAOgC,EAAKC,GACnB,IAAK,IAAInI,EAAI,EAAGA,EAAIkI,EAAIhK,OAAQ8B,IAC9B,GAAIkI,EAAIlI,GAAGmI,KAAUjC,EACnB,OAAOlG,EAGX,OAAQ,I,uCAmBQ,IAAD,SAMXX,KAAKqD,MAJPQ,EAFa,EAEbA,iBACA1D,EAHa,EAGbA,YACA4D,EAJa,EAIbA,oBACA4C,EALa,EAKbA,OAEFoC,IACGC,IADH,UAEO5C,EAFP,qBAE0BvC,EAF1B,wBAE0D1D,EAF1D,oBAGM4D,EAAoBgB,OAH1B,mBAIe4B,IAEZsC,MAAK,SAAAC,GACJ,OAAOA,EAAIxH,QAEZuH,MAAK,SAAAvH,GACJ,EAAKsB,SAAS,CACZ9C,UAAWwB,EAAKxB,UAChBmH,MAAO3F,EAAKA,KACZwF,cAAe,GACfpD,eAAgBpC,EAAKyH,UACrBT,WAAW,S,+BAwBT,IAAD,SAaH1I,KAAKqD,MAXPlD,EAFK,EAELA,YACAkH,EAHK,EAGLA,MACA7D,EAJK,EAILA,YACAK,EALK,EAKLA,iBACAC,EANK,EAMLA,eACAC,EAPK,EAOLA,oBACAmD,EARK,EAQLA,cACA7C,EATK,EASLA,aACAC,EAVK,EAULA,UACAsB,EAXK,EAWLA,UACAC,EAZK,EAYLA,WAEMnH,EAAUsB,KAAKlC,MAAfY,MACFsF,GAAc7D,EAAc,GAAK0D,EACjCI,EAAW9D,EAAc0D,EAE/B,OAAQ7D,KAAKqD,MAAMqF,UAGjB,kBAAC,WAAD,KACE,yBAAKzK,UAAU,0BACb,kBAAC,IAAD,CACEqB,QAAQ,kBACRkE,YAAaA,EACbC,kBAAmBzD,KAAKyD,kBACxBC,sBAAuB1D,KAAK0D,sBAC5BC,cAAe3D,KAAK2D,cACpBC,eAAgB5D,KAAK4D,eACrBC,iBAAkBA,EAClBC,eAAgBA,EAChBC,oBAAqBA,EACrBrF,MAAOA,EACPsF,WAAYA,EACZC,SAAUA,EACVC,oBAAqBgD,EAAgBA,EAAcrI,OAAS,EAC5DsF,YAAakD,EAAQA,EAAMxI,OAAS,EACpCuF,YAAapE,KAAKoE,YAClBC,aAAcA,EACdC,UAAWA,EACXC,YAAavE,KAAKuE,cAEpB,kBAAC,IAAD,CACEqB,UAAWA,EACXrB,YAAavE,KAAKuE,YAClBsB,WAAYA,IAEd,kBAAC,IAAD,KACG7F,KAAKqD,MAAMgE,MAAMpI,KAAI,SAAAqC,GACpB,MAA+B,cAA3B,EAAK+B,MAAMG,YAEX,kBAAC,IAAD,CACEtE,IAAKoC,EAAQlD,GACbkD,QAASA,EACTC,SAAU,EAAK8B,MAAM6D,cAAcC,SAAS7F,EAAQlD,IACpDoD,QAASA,EACTC,YAAa,EAAKA,cAGc,cAA3B,EAAK4B,MAAMG,YAElB,kBAAC,IAAD,CACEtE,IAAKoC,EAAQlD,GACbkD,QAASA,EACTC,SAAU,EAAK8B,MAAM6D,cAAcC,SAAS7F,EAAQlD,IACpDoD,QAASA,EACTC,YAAa,EAAKA,cAKpB,kBAAC,IAAD,CACEvC,IAAKoC,EAAQlD,GACbkD,QAASA,EACTC,SAAU,EAAK8B,MAAM6D,cAAcC,SAAS7F,EAAQlD,IACpDqD,YAAa,EAAKA,YAClBD,QAASA,OAIb,IACJ,kBAAC,IAAD,CACErB,YAAaH,KAAKqD,MAAMlD,YACxBD,UAAWF,KAAKqD,MAAMnD,UACtBD,aAAc,SAAAU,GAAC,OAAI,EAAKV,aAAaU,MAEvC,kBAAC,IAAD,CACE+B,mBAAoB1C,KAAK0C,mBACzBD,cAAezC,KAAKyC,mBAtE5B,yBAAKxE,UAAU,gB,GA5OQmD,aA0TdkF","file":"static/js/product-thumb-list.db86d0be.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading}/></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React from \"react\";\r\nimport { components } from \"react-select\";\r\n\r\nconst CustomSelectInput = props => {\r\n  var customProps = Object.assign({}, props);\r\n  delete customProps.autoCorrect;\r\n  delete customProps.autoCapitalize;\r\n  return <components.Input {...customProps} />;\r\n};\r\n\r\nexport default CustomSelectInput\r\n","import React from \"react\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\r\nclass Pagination extends React.Component {\r\n  componentDidMount() {}\r\n  onChangePage(e) {\r\n    this.props.onChangePage(e);\r\n  }\r\n  render() {\r\n    const {\r\n      totalPage = 0,\r\n      currentPage = 1,\r\n      numberLimit = 5,\r\n      lastIsActive = true,\r\n      firstIsActive = true\r\n    } = this.props;\r\n\r\n    let startPoint = 1;\r\n    let endPoint = numberLimit;\r\n\r\n    if (numberLimit > totalPage) {\r\n      startPoint = 1;\r\n      endPoint = totalPage;\r\n    } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n      startPoint = 1;\r\n      endPoint = numberLimit;\r\n    } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n      startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n      endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n    } else {\r\n      startPoint = totalPage - (numberLimit - 1);\r\n      endPoint = totalPage;\r\n    }\r\n    startPoint = startPoint === 0 ? 1 : startPoint;\r\n    const points = [];\r\n    for (var i = startPoint; i <= endPoint; i++) {\r\n      points.push(i);\r\n    }\r\n\r\n    let firstPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n    let lastPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n    let prevPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n    let nextPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n    return totalPage > 1 ? (\r\n      <Colxx xxs=\"12\" className=\"mt-3\">\r\n        <Nav className=\"pagination justify-content-center\">\r\n          {firstIsActive && (\r\n            <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n              <NavLink\r\n                className=\"page-link first\"\r\n                onClick={() => this.onChangePage(1)}>\r\n                <i className=\"simple-icon-control-start\" />\r\n              </NavLink>\r\n            </NavItem>\r\n          )}\r\n\r\n          <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link prev\"\r\n              onClick={() => this.onChangePage(currentPage - 1)}\r\n            >\r\n              <i className=\"simple-icon-arrow-left\" />\r\n            </NavLink>\r\n          </NavItem>\r\n          {points.map(i => {\r\n            return (\r\n              <NavItem\r\n                key={i}\r\n                className={`page-item ${currentPage === i && \"active\"}`}>\r\n                <NavLink\r\n                  className=\"page-link\"\r\n                  onClick={() => this.onChangePage(i)}\r\n                >\r\n                  {i}\r\n                </NavLink>\r\n              </NavItem>\r\n            );\r\n          })}\r\n          <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link next\"\r\n              onClick={() => this.onChangePage(currentPage + 1)}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </NavLink>\r\n          </NavItem>\r\n          {lastIsActive && (\r\n            <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n              <NavLink\r\n                className=\"page-link last\"\r\n                onClick={() => this.onChangePage(totalPage)}>\r\n                <i className=\"simple-icon-control-end\" />\r\n              </NavLink>\r\n            </NavItem>\r\n          )}\r\n        </Nav>\r\n      </Colxx>\r\n    ) : (\r\n      <Colxx xxs=\"12\" className=\"mt-2\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { Card, CustomInput, Badge } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst DataListView = ({ product, isSelect, collect, onCheckItem }) => {\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\r\n        <Card\r\n          onClick={event => onCheckItem(event, product.id)}\r\n          className={classnames(\"d-flex flex-row\", {\r\n            active: isSelect\r\n          })}\r\n        >\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\r\n                <p className=\"list-item-heading mb-1 truncate\">\r\n                  {product.title}\r\n                </p>\r\n              </NavLink>\r\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.category}\r\n              </p>\r\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.date}\r\n              </p>\r\n              <div className=\"w-15 w-sm-100\">\r\n                <Badge color={product.statusColor} pill>\r\n                  {product.status}\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n              <CustomInput\r\n                className=\"item-check mb-0\"\r\n                type=\"checkbox\"\r\n                id={`check_${product.id}`}\r\n                checked={isSelect}\r\n                onChange={() => {}}\r\n                label=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(DataListView);\r\n","import React from \"react\";\r\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\r\n\r\nconst ContextMenuContainer = ({onContextMenu,onContextMenuClick}) => {\r\n  return (\r\n    <ContextMenu\r\n      id=\"menu_id\"\r\n      onShow={e => onContextMenu(e, e.detail.data)}\r\n    >\r\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"copy\" }}>\r\n        <i className=\"simple-icon-docs\" /> <span>Copy</span>\r\n      </MenuItem>\r\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"move\" }}>\r\n        <i className=\"simple-icon-drawer\" /> <span>Move to archive</span>\r\n      </MenuItem>\r\n      <MenuItem onClick={onContextMenuClick} data={{ action: \"delete\" }}>\r\n        <i className=\"simple-icon-trash\" /> <span>Delete</span>\r\n      </MenuItem>\r\n    </ContextMenu>\r\n  );\r\n};\r\n\r\nexport default ContextMenuContainer;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Button,\r\n  ButtonDropdown,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  CustomInput,\r\n  Collapse\r\n} from \"reactstrap\";\r\nimport { injectIntl } from \"react-intl\";\r\n\r\nimport { Colxx, Separator } from \"../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../navs/Breadcrumb\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nimport {\r\n  DataListIcon,\r\n  ThumbListIcon,\r\n  ImageListIcon\r\n} from \"../../components/svg\";\r\nclass ListPageHeading extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      dropdownSplitOpen: false,\r\n      displayOptionsIsOpen: false\r\n    };\r\n  }\r\n\r\n  toggleDisplayOptions = () => {\r\n    this.setState(prevState => ({\r\n      displayOptionsIsOpen: !prevState.displayOptionsIsOpen\r\n    }));\r\n  };\r\n  toggleSplit =()=> {\r\n    this.setState(prevState => ({\r\n      dropdownSplitOpen: !prevState.dropdownSplitOpen\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { messages } = this.props.intl;\r\n    const {\r\n      displayMode,\r\n      changeDisplayMode,\r\n      handleChangeSelectAll,\r\n      changeOrderBy,\r\n      changePageSize,\r\n      selectedPageSize,\r\n      totalItemCount,\r\n      selectedOrderOption,\r\n      match,\r\n      startIndex,\r\n      endIndex,\r\n      selectedItemsLength,\r\n      itemsLength,\r\n      onSearchKey,\r\n      orderOptions,\r\n      pageSizes,\r\n      toggleModal,\r\n      heading\r\n    } = this.props;\r\n\r\n    const { displayOptionsIsOpen, dropdownSplitOpen } = this.state;\r\n    return (\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <div className=\"mb-2\">\r\n            <h1>\r\n              <IntlMessages id={heading} />\r\n            </h1>\r\n\r\n            <div className=\"text-zero top-right-button-container\">\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"lg\"\r\n                className=\"top-right-button\"\r\n                onClick={()=>toggleModal()}>\r\n                <IntlMessages id=\"pages.add-new\" />\r\n              </Button>\r\n              {\"  \"}\r\n              <ButtonDropdown\r\n                isOpen={dropdownSplitOpen}\r\n                toggle={this.toggleSplit}>\r\n                <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\r\n                    <CustomInput\r\n                      className=\"custom-checkbox mb-0 d-inline-block\"\r\n                      type=\"checkbox\"\r\n                      id=\"checkAll\"\r\n                      checked={selectedItemsLength >= itemsLength}\r\n                      onChange={() => handleChangeSelectAll(true)}\r\n                      label={\r\n                        <span\r\n                          className={`custom-control-label ${\r\n                            selectedItemsLength > 0 &&\r\n                            selectedItemsLength < itemsLength\r\n                              ? \"indeterminate\"\r\n                              : \"\"\r\n                          }`}\r\n                        />\r\n                      }\r\n                    />\r\n                </div>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"primary\"\r\n                  className=\"dropdown-toggle-split btn-lg\"/>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    <IntlMessages id=\"pages.delete\" />\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <IntlMessages id=\"pages.another-action\" />\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </ButtonDropdown>\r\n            </div>\r\n            <Breadcrumb match={match} />\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <Button\r\n              color=\"empty\"\r\n              className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n              onClick={this.toggleDisplayOptions}\r\n            >\r\n              <IntlMessages id=\"pages.display-options\" />{\" \"}\r\n              <i className=\"simple-icon-arrow-down align-middle\" />\r\n            </Button>\r\n            <Collapse\r\n              isOpen={displayOptionsIsOpen}\r\n              className=\"d-md-block\"\r\n              id=\"displayOptions\">\r\n              <span className=\"mr-3 d-inline-block float-md-left\">\r\n                <a\r\n                  href=\"#/\"\r\n                  className={`mr-2 view-icon ${\r\n                    displayMode === \"list\" ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => changeDisplayMode(\"list\")}>\r\n                  <DataListIcon />\r\n                </a>\r\n                <a\r\n                  href=\"#/\"\r\n                  className={`mr-2 view-icon ${\r\n                    displayMode === \"thumblist\" ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => changeDisplayMode(\"thumblist\")}>\r\n                  <ThumbListIcon />\r\n                </a>\r\n                <a\r\n                  href=\"#/\"\r\n                  className={`mr-2 view-icon ${\r\n                    displayMode === \"imagelist\" ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => changeDisplayMode(\"imagelist\")}>\r\n                  <ImageListIcon />\r\n                </a>\r\n              </span>\r\n\r\n              <div className=\"d-block d-md-inline-block pt-1\">\r\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                    <IntlMessages id=\"pages.orderby\" />\r\n                    {selectedOrderOption.label}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    {orderOptions.map((order, index) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          key={index}\r\n                          onClick={() => changeOrderBy(order.column)}\r\n                        >\r\n                          {order.label}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"keyword\"\r\n                    id=\"search\"\r\n                    placeholder={messages[\"menu.search\"]}\r\n                    onKeyPress={e => onSearchKey(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"float-md-right pt-1\">\r\n                <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                    {selectedPageSize}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    {pageSizes.map((size, index) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          key={index}\r\n                          onClick={() => changePageSize(size)}\r\n                        >\r\n                          {size}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </Collapse>\r\n          </div>\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(ListPageHeading);\r\n","import React from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  CardSubtitle,\r\n  CardImg,\r\n  CardText,\r\n  CustomInput,\r\n  Badge\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst ImageListView = ({ product, isSelect, collect, onCheckItem }) => {\r\n  return (\r\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\r\n        <Card\r\n          onClick={event => onCheckItem(event, product.id)}\r\n          className={classnames({\r\n            active: isSelect\r\n          })}\r\n        >\r\n          <div className=\"position-relative\">\r\n            <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\r\n              <CardImg top alt={product.title} src={product.img} />\r\n            </NavLink>\r\n            <Badge\r\n              color={product.statusColor}\r\n              pill\r\n              className=\"position-absolute badge-top-left\"\r\n            >\r\n              {product.status}\r\n            </Badge>\r\n          </div>\r\n          <CardBody>\r\n            <Row>\r\n              <Colxx xxs=\"2\">\r\n                <CustomInput\r\n                  className=\"item-check mb-0\"\r\n                  type=\"checkbox\"\r\n                  id={`check_${product.id}`}\r\n                  checked={isSelect}\r\n                  onChange={() => {}}\r\n                  label=\"\"/>\r\n              </Colxx>\r\n              <Colxx xxs=\"10\" className=\"mb-3\">\r\n                <CardSubtitle>{product.title}</CardSubtitle>\r\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\r\n                  {product.date}\r\n                </CardText>\r\n              </Colxx>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(ImageListView);\r\n","import React from \"react\";\r\nimport { Card, CustomInput, Badge } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\n\r\nconst ThumbListView = ({ product, isSelect, collect, onCheckItem }) => {\r\n  return (\r\n    <Colxx xxs=\"12\" key={product.id} className=\"mb-3\">\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\r\n        <Card\r\n          onClick={event => onCheckItem(event, product.id)}\r\n          className={classnames(\"d-flex flex-row\", {\r\n            active: isSelect\r\n          })}\r\n        >\r\n          <NavLink to={`?p=${product.id}`} className=\"d-flex\">\r\n            <img\r\n              alt={product.title}\r\n              src={product.img}\r\n              className=\"list-thumbnail responsive border-0 card-img-left\"\r\n            />\r\n          </NavLink>\r\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\r\n              <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\r\n                <p className=\"list-item-heading mb-1 truncate\">\r\n                  {product.title}\r\n                </p>\r\n              </NavLink>\r\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.category}\r\n              </p>\r\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\r\n                {product.date}\r\n              </p>\r\n              <div className=\"w-15 w-sm-100\">\r\n                <Badge color={product.statusColor} pill>\r\n                  {product.status}\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\r\n              <CustomInput\r\n                className=\"item-check mb-0\"\r\n                type=\"checkbox\"\r\n                id={`check_${product.id}`}\r\n                checked={isSelect}\r\n                onChange={()=>{}}\r\n                label=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\r\nexport default React.memo(ThumbListView);\r\n","import React from \"react\";\r\nimport {\r\n  CustomInput,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  Label\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport CustomSelectInput from \"../../components/common/CustomSelectInput\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst AddNewModal = ({ modalOpen, toggleModal, categories }) => {\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      toggle={toggleModal}\r\n      wrapClassName=\"modal-right\"\r\n      backdrop=\"static\"\r\n    >\r\n      <ModalHeader toggle={toggleModal}>\r\n        <IntlMessages id=\"pages.add-new-modal-title\" />\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Label>\r\n          <IntlMessages id=\"pages.product-name\" />\r\n        </Label>\r\n        <Input />\r\n        <Label className=\"mt-4\">\r\n          <IntlMessages id=\"pages.category\" />\r\n        </Label>\r\n        <Select\r\n          components={{ Input: CustomSelectInput }}\r\n          className=\"react-select\"\r\n          classNamePrefix=\"react-select\"\r\n          name=\"form-field-name\"\r\n          options={categories}\r\n        />\r\n        <Label className=\"mt-4\">\r\n          <IntlMessages id=\"pages.description\" />\r\n        </Label>\r\n        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\r\n        <Label className=\"mt-4\">\r\n          <IntlMessages id=\"pages.status\" />\r\n        </Label>\r\n        <CustomInput\r\n          type=\"radio\"\r\n          id=\"exCustomRadio\"\r\n          name=\"customRadio\"\r\n          label=\"ON HOLD\"\r\n        />\r\n        <CustomInput\r\n          type=\"radio\"\r\n          id=\"exCustomRadio2\"\r\n          name=\"customRadio\"\r\n          label=\"PROCESSED\"\r\n        />\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"secondary\" outline onClick={toggleModal}>\r\n          <IntlMessages id=\"pages.cancel\" />\r\n        </Button>\r\n        <Button color=\"primary\" onClick={toggleModal}>\r\n          <IntlMessages id=\"pages.submit\" />\r\n        </Button>{\" \"}\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewModal;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Row } from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport { servicePath } from \"../../../../constants/defaultValues\";\r\n\r\nimport DataListView from \"../../../../containers/pages/DataListView\";\r\nimport Pagination from \"../../../../containers/pages/Pagination\";\r\nimport ContextMenuContainer from \"../../../../containers/pages/ContextMenuContainer\";\r\nimport ListPageHeading from \"../../../../containers/pages/ListPageHeading\";\r\nimport ImageListView from \"../../../../containers/pages/ImageListView\";\r\nimport ThumbListView from \"../../../../containers/pages/ThumbListView\";\r\nimport AddNewModal from \"../../../../containers/pages/AddNewModal\";\r\n\r\nfunction collect(props) {\r\n  return { data: props.data };\r\n}\r\nconst apiUrl = servicePath + \"/cakes/paging\";\r\n\r\nclass ImageListPages extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mouseTrap = require('mousetrap');\r\n    this.state = {\r\n      displayMode: \"thumblist\",\r\n\r\n      selectedPageSize: 8,\r\n      orderOptions: [\r\n        { column: \"title\", label: \"Product Name\" },\r\n        { column: \"category\", label: \"Category\" },\r\n        { column: \"status\", label: \"Status\" }\r\n      ],\r\n      pageSizes: [8, 12, 24],\r\n\r\n      categories: [\r\n        { label: \"Cakes\", value: \"Cakes\", key: 0 },\r\n        { label: \"Cupcakes\", value: \"Cupcakes\", key: 1 },\r\n        { label: \"Desserts\", value: \"Desserts\", key: 2 }\r\n      ],\r\n\r\n      selectedOrderOption: { column: \"title\", label: \"Product Name\" },\r\n      dropdownSplitOpen: false,\r\n      modalOpen: false,\r\n      currentPage: 1,\r\n      totalItemCount: 0,\r\n      totalPage: 1,\r\n      search: \"\",\r\n      selectedItems: [],\r\n      lastChecked: null,\r\n      isLoading: false\r\n    };\r\n  }\r\n \r\n  componentDidMount() {\r\n    this.dataListRender();\r\n    this.mouseTrap.bind([\"ctrl+a\", \"command+a\"], () =>\r\n      this.handleChangeSelectAll(false)\r\n    );\r\n    this.mouseTrap.bind([\"ctrl+d\", \"command+d\"], () => {\r\n      this.setState({\r\n        selectedItems: []\r\n      });\r\n      return false;\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mouseTrap.unbind(\"ctrl+a\");\r\n    this.mouseTrap.unbind(\"command+a\");\r\n    this.mouseTrap.unbind(\"ctrl+d\");\r\n    this.mouseTrap.unbind(\"command+d\");\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen\r\n    });\r\n  };\r\n\r\n  changeOrderBy = column => {\r\n    this.setState(\r\n      {\r\n        selectedOrderOption: this.state.orderOptions.find(\r\n          x => x.column === column\r\n        )\r\n      },\r\n      () => this.dataListRender()\r\n    );\r\n  };\r\n  changePageSize = size => {\r\n    this.setState(\r\n      {\r\n        selectedPageSize: size,\r\n        currentPage: 1\r\n      },\r\n      () => this.dataListRender()\r\n    );\r\n  };\r\n  changeDisplayMode = mode => {\r\n    this.setState({\r\n      displayMode: mode\r\n    });\r\n    return false;\r\n  };\r\n  onChangePage = page => {\r\n    this.setState(\r\n      {\r\n        currentPage: page\r\n      },\r\n      () => this.dataListRender()\r\n    );\r\n  };\r\n\r\n  onSearchKey = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.setState(\r\n        {\r\n          search: e.target.value.toLowerCase()\r\n        },\r\n        () => this.dataListRender()\r\n      );\r\n    }\r\n  };\r\n\r\n  onCheckItem = (event, id) => {\r\n    if (\r\n      event.target.tagName === \"A\" ||\r\n      (event.target.parentElement && event.target.parentElement.tagName === \"A\")\r\n    ) {\r\n      return true;\r\n    }\r\n    if (this.state.lastChecked === null) {\r\n      this.setState({\r\n        lastChecked: id\r\n      });\r\n    }\r\n\r\n    let selectedItems = this.state.selectedItems;\r\n    if (selectedItems.includes(id)) {\r\n      selectedItems = selectedItems.filter(x => x !== id);\r\n    } else {\r\n      selectedItems.push(id);\r\n    }\r\n    this.setState({\r\n      selectedItems\r\n    });\r\n\r\n    if (event.shiftKey) {\r\n      var items = this.state.items;\r\n      var start = this.getIndex(id, items, \"id\");\r\n      var end = this.getIndex(this.state.lastChecked, items, \"id\");\r\n      items = items.slice(Math.min(start, end), Math.max(start, end) + 1);\r\n      selectedItems.push(\r\n        ...items.map(item => {\r\n          return item.id;\r\n        })\r\n      );\r\n      selectedItems = Array.from(new Set(selectedItems));\r\n      this.setState({\r\n        selectedItems\r\n      });\r\n    }\r\n    document.activeElement.blur();\r\n  };\r\n\r\n  getIndex(value, arr, prop) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i][prop] === value) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n  handleChangeSelectAll = isToggle => {\r\n    if (this.state.selectedItems.length >= this.state.items.length) {\r\n      if (isToggle) {\r\n        this.setState({\r\n          selectedItems: []\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        selectedItems: this.state.items.map(x => x.id)\r\n      });\r\n    }\r\n    document.activeElement.blur();\r\n    return false;\r\n  };\r\n\r\n\r\n  dataListRender() {\r\n    const {\r\n      selectedPageSize,\r\n      currentPage,\r\n      selectedOrderOption,\r\n      search\r\n    } = this.state;\r\n    axios\r\n      .get(\r\n        `${apiUrl}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${\r\n          selectedOrderOption.column\r\n        }&search=${search}`\r\n      )\r\n      .then(res => {\r\n        return res.data;\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          totalPage: data.totalPage,\r\n          items: data.data,\r\n          selectedItems: [],\r\n          totalItemCount: data.totalItem,\r\n          isLoading: true\r\n        });\r\n      });\r\n  }\r\n\r\n  onContextMenuClick = (e, data, target) => {\r\n    console.log(\r\n      \"onContextMenuClick - selected items\",\r\n      this.state.selectedItems\r\n    );\r\n    console.log(\"onContextMenuClick - action : \", data.action);\r\n  };\r\n\r\n  onContextMenu = (e, data) => {\r\n    const clickedProductId = data.data;\r\n    if (!this.state.selectedItems.includes(clickedProductId)) {\r\n      this.setState({\r\n        selectedItems: [clickedProductId]\r\n      });\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currentPage,\r\n      items,\r\n      displayMode,\r\n      selectedPageSize,\r\n      totalItemCount,\r\n      selectedOrderOption,\r\n      selectedItems,\r\n      orderOptions,\r\n      pageSizes,\r\n      modalOpen,\r\n      categories\r\n    } = this.state;\r\n    const { match } = this.props;\r\n    const startIndex = (currentPage - 1) * selectedPageSize;\r\n    const endIndex = currentPage * selectedPageSize;\r\n\r\n    return !this.state.isLoading ? (\r\n      <div className=\"loading\" />\r\n    ) : (\r\n      <Fragment>\r\n        <div className=\"disable-text-selection\">\r\n          <ListPageHeading\r\n            heading=\"menu.thumb-list\"\r\n            displayMode={displayMode}\r\n            changeDisplayMode={this.changeDisplayMode}\r\n            handleChangeSelectAll={this.handleChangeSelectAll}\r\n            changeOrderBy={this.changeOrderBy}\r\n            changePageSize={this.changePageSize}\r\n            selectedPageSize={selectedPageSize}\r\n            totalItemCount={totalItemCount}\r\n            selectedOrderOption={selectedOrderOption}\r\n            match={match}\r\n            startIndex={startIndex}\r\n            endIndex={endIndex}\r\n            selectedItemsLength={selectedItems ? selectedItems.length : 0}\r\n            itemsLength={items ? items.length : 0}\r\n            onSearchKey={this.onSearchKey}\r\n            orderOptions={orderOptions}\r\n            pageSizes={pageSizes}\r\n            toggleModal={this.toggleModal}\r\n          />\r\n          <AddNewModal\r\n            modalOpen={modalOpen}\r\n            toggleModal={this.toggleModal}\r\n            categories={categories}\r\n          />\r\n          <Row>\r\n            {this.state.items.map(product => {\r\n              if (this.state.displayMode === \"imagelist\") {\r\n                return (\r\n                  <ImageListView\r\n                    key={product.id}\r\n                    product={product}\r\n                    isSelect={this.state.selectedItems.includes(product.id)}\r\n                    collect={collect}\r\n                    onCheckItem={this.onCheckItem}\r\n                  />\r\n                );\r\n              } else if (this.state.displayMode === \"thumblist\") {\r\n                return (\r\n                  <ThumbListView\r\n                    key={product.id}\r\n                    product={product}\r\n                    isSelect={this.state.selectedItems.includes(product.id)}\r\n                    collect={collect}\r\n                    onCheckItem={this.onCheckItem}\r\n                  />\r\n                );\r\n              } else {\r\n                return (\r\n                  <DataListView\r\n                    key={product.id}\r\n                    product={product}\r\n                    isSelect={this.state.selectedItems.includes(product.id)}\r\n                    onCheckItem={this.onCheckItem}\r\n                    collect={collect}\r\n                  />\r\n                );\r\n              }\r\n            })}{\" \"}\r\n            <Pagination\r\n              currentPage={this.state.currentPage}\r\n              totalPage={this.state.totalPage}\r\n              onChangePage={i => this.onChangePage(i)}\r\n            />\r\n            <ContextMenuContainer\r\n              onContextMenuClick={this.onContextMenuClick}\r\n              onContextMenu={this.onContextMenu}\r\n            />\r\n          </Row>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default ImageListPages;\r\n"],"sourceRoot":""}