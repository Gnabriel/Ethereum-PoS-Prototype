{"version":3,"sources":["views/app/ui/forms/layouts.js","components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","components/common/CustomSelectInput.js","../node_modules/reactstrap/es/FormText.js"],"names":["selectData","label","value","key","FormLayoutsUi","props","handleTagChange","tags","setState","handleTagChangeLabelOver","tagsLabelOver","handleTagChangeLabelTop","tagsLabelTop","handleChangeLabelOver","selectedOptionLabelOver","handleChangeLabelTop","selectedOptionLabelTop","handleChangeDateLabelOver","date","startDateLabelOver","handleChangeDateLabelTop","startDateLabelTop","state","selectedOption","startDate","startDateTime","startDateRange","endDateRange","embeddedDate","moment","messages","this","intl","xxs","heading","match","className","id","for","type","name","placeholder","color","row","sm","check","disabled","onChange","inputProps","selected","components","Input","CustomSelectInput","classNamePrefix","options","shouldCloseOnSelect","Component","injectIntl","Colxx","widths","Separator","getMenuTitle","sub","getUrl","path","index","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map","active","to","BreadcrumbContainer","propTypes","tag","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","children","node","Breadcrumb","Tag","ListTag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","listClasses","React","createElement","_extends","defaultProps","bool","BreadcrumbItem","undefined","customProps","Object","assign","autoCorrect","autoCapitalize","inline","FormText"],"mappings":"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","file":"static/js/forms-layouts.3d182f72.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  CardTitle,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput,\r\n  Button,\r\n  FormText,\r\n  Form\r\n} from \"reactstrap\";\r\nimport { injectIntl} from 'react-intl';\r\n\r\nimport IntlMessages from \"../../../../helpers/IntlMessages\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport TagsInput from \"react-tagsinput\";\r\n\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"rc-switch/assets/index.css\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"react-rater/lib/react-rater.css\";\r\n\r\nimport { Colxx, Separator } from \"../../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../../containers/navs/Breadcrumb\";\r\n\r\nimport Select from \"react-select\";\r\nimport CustomSelectInput from \"../../../../components/common/CustomSelectInput\";\r\n\r\nconst selectData = [\r\n  { label: \"Cake\", value: \"cake\", key: 0 },\r\n  { label: \"Cupcake\", value: \"cupcake\", key: 1 },\r\n  { label: \"Dessert\", value: \"dessert\", key: 2 }\r\n];\r\n\r\n\r\nclass FormLayoutsUi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedOption: \"\",\r\n      selectedOptionLabelOver: \"\",\r\n      selectedOptionLabelTop: \"\",\r\n      startDate: null,\r\n      startDateLabelOver: null,\r\n      startDateLabelTop: null,\r\n      startDateTime: null,\r\n      startDateRange: null,\r\n      endDateRange: null,\r\n      embeddedDate: moment(),\r\n      tags: [],\r\n      tagsLabelOver: [],\r\n      tagsLabelTop: []\r\n    };\r\n  }\r\n\r\n  handleTagChange = tags => {\r\n    this.setState({ tags });\r\n  };\r\n\r\n  handleTagChangeLabelOver = tagsLabelOver => {\r\n    this.setState({ tagsLabelOver });\r\n  };\r\n\r\n  handleTagChangeLabelTop = tagsLabelTop => {\r\n    this.setState({ tagsLabelTop });\r\n  };\r\n\r\n  handleChangeLabelOver = selectedOptionLabelOver => {\r\n    this.setState({ selectedOptionLabelOver });\r\n  };\r\n\r\n  handleChangeLabelTop = selectedOptionLabelTop => {\r\n    this.setState({ selectedOptionLabelTop });\r\n  };\r\n\r\n  handleChangeDateLabelOver = date => {\r\n    this.setState({\r\n      startDateLabelOver: date\r\n    });\r\n  };\r\n  handleChangeDateLabelTop = date => {\r\n    this.setState({\r\n      startDateLabelTop: date\r\n    });\r\n  };\r\n  render() {\r\n    const { messages } = this.props.intl;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Breadcrumb heading=\"menu.form-layouts\" match={this.props.match} />\r\n            <Separator className=\"mb-5\" />\r\n          </Colxx>\r\n        </Row>\r\n        <Row className=\"mb-4\">\r\n          <Colxx xxs=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>\r\n                  <IntlMessages id=\"forms.basic\" />\r\n                </CardTitle>\r\n                <Form>\r\n                  <FormGroup>\r\n                    <Label for=\"exampleEmail\">\r\n                      <IntlMessages id=\"forms.email\" />\r\n                    </Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      id=\"exampleEmail\"\r\n                      placeholder={messages[\"forms.email\"]}\r\n                    />\r\n                    <FormText color=\"muted\">\r\n                      <IntlMessages id=\"forms.email-muted\" />\r\n                    </FormText>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"passwordBasic\">\r\n                      <IntlMessages id=\"forms.password\" />\r\n                    </Label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      name=\"passwordBasic\"\r\n                      id=\"passwordBasic\"\r\n                      placeholder={messages[\"forms.password\"]}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <CustomInput\r\n                      type=\"checkbox\"\r\n                      id=\"exampleCustomCheckbox\"\r\n                      label=\"Check this custom checkbox\"\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <Button color=\"primary\" className=\"mt-4\">\r\n                    <IntlMessages id=\"forms.submit\" />\r\n                  </Button>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n\r\n        <Row className=\"mb-4\">\r\n          <Colxx xxs=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>\r\n                  <IntlMessages id=\"forms.horizontal\" />\r\n                </CardTitle>\r\n                <Form>\r\n                  <FormGroup row>\r\n                    <Label for=\"emailHorizontal\" sm={2}>\r\n                      <IntlMessages id=\"forms.email\" />\r\n                    </Label>\r\n                    <Colxx sm={10}>\r\n                      <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"emailHorizontal\"\r\n                        placeholder={messages[\"forms.email\"]}\r\n                      />\r\n                    </Colxx>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup row>\r\n                    <Label for=\"passwordHorizontal\" sm={2}>\r\n                      <IntlMessages id=\"forms.password\" />\r\n                    </Label>\r\n                    <Colxx sm={10}>\r\n                      <Input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"passwordHorizontal\"\r\n                        placeholder={messages[\"forms.password\"]}\r\n                      />\r\n                    </Colxx>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup row>\r\n                    <Label sm={2} className=\"pt-0\">\r\n                      <IntlMessages id=\"forms.radios\" />\r\n                    </Label>\r\n                    <Colxx sm={10}>\r\n                      <FormGroup check>\r\n                        <Label check>\r\n                          <Input type=\"radio\" name=\"radio1\" />\r\n                          <IntlMessages id=\"forms.first-radio\" />\r\n                        </Label>\r\n                      </FormGroup>\r\n                      <FormGroup check>\r\n                        <Label check>\r\n                          <Input type=\"radio\" name=\"radio1\" />\r\n                          <IntlMessages id=\"forms.second-radio\" />\r\n                        </Label>\r\n                      </FormGroup>\r\n                      <FormGroup check disabled>\r\n                        <Label check>\r\n                          <Input type=\"radio\" name=\"radio1\" disabled />\r\n                          <IntlMessages id=\"forms.third-radio-disabled\" />\r\n                        </Label>\r\n                      </FormGroup>\r\n                    </Colxx>\r\n                  </FormGroup>\r\n\r\n                  <FormGroup row>\r\n                    <Label sm={2} className=\"pt-0\">\r\n                      <IntlMessages id=\"forms.checkbox\" />\r\n                    </Label>\r\n                    <Colxx sm={10}>\r\n                      <FormGroup check>\r\n                        <Label check>\r\n                          <Input type=\"checkbox\" name=\"check1\" /> Example\r\n                          <IntlMessages id=\"forms.checkbox\" />\r\n                        </Label>\r\n                      </FormGroup>\r\n                    </Colxx>\r\n                  </FormGroup>\r\n\r\n                  <Button color=\"primary\">\r\n                    <IntlMessages id=\"forms.signin\" />\r\n                  </Button>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n\r\n        <Row className=\"mb-4\">\r\n          <Colxx xxs=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>\r\n                  <IntlMessages id=\"forms.top-labels-over-line\" />\r\n                </CardTitle>\r\n\r\n                <Form>\r\n                  <Label className=\"form-group has-float-label\">\r\n                    <Input type=\"email\" />\r\n                    <IntlMessages id=\"forms.email\" />\r\n                  </Label>\r\n                  <Label className=\"form-group has-float-label\">\r\n                    <Input type=\"password\" />\r\n                    <IntlMessages id=\"forms.password\" />\r\n                  </Label>\r\n                  <div className=\"form-group has-float-label\">\r\n                    <TagsInput\r\n                      value={this.state.tagsLabelOver}\r\n                      onChange={this.handleTagChangeLabelOver}\r\n                      inputProps={{ placeholder: \"\" }}\r\n                    />\r\n                    <IntlMessages id=\"forms.tags\" />\r\n                  </div>\r\n                  <div className=\"form-group has-float-label\">\r\n                    <DatePicker\r\n                      selected={this.state.startDateLabelOver}\r\n                      onChange={this.handleChangeDateLabelOver}\r\n                    />\r\n                    <IntlMessages id=\"forms.date\" />\r\n                  </div>\r\n\r\n                  <div className=\"form-group has-float-label\">\r\n                    <Select\r\n                      components={{ Input: CustomSelectInput }}\r\n                      className=\"react-select\"\r\n                      classNamePrefix=\"react-select\"\r\n                      name=\"form-field-name\"\r\n                      value={this.state.selectedOptionLabelOver}\r\n                      onChange={this.handleChangeLabelOver}\r\n                      options={selectData}\r\n                      placeholder=\"\"\r\n                    />\r\n                    <IntlMessages id=\"forms.state\" />\r\n                  </div>\r\n\r\n                  <Button color=\"primary\">\r\n                    <IntlMessages id=\"forms.submit\" />\r\n                  </Button>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n\r\n        <Row className=\"mb-4\">\r\n          <Colxx xxs=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>\r\n                  <IntlMessages id=\"forms.top-labels-in-input\" />\r\n                </CardTitle>\r\n\r\n                <Form>\r\n                  <Label className=\"form-group has-top-label\">\r\n                    <Input type=\"email\" />\r\n                    <IntlMessages id=\"forms.email-u\" />\r\n                  </Label>\r\n                  <Label className=\"form-group has-top-label\">\r\n                    <Input type=\"password\" />\r\n                    <IntlMessages id=\"forms.password-u\" />\r\n                  </Label>\r\n                  <div className=\"form-group has-top-label\">\r\n                    <TagsInput\r\n                      value={this.state.tagsLabelTop}\r\n                      onChange={this.handleTagChangeLabelTop}\r\n                      inputProps={{ placeholder: \"\" }}\r\n                    />\r\n                    <IntlMessages id=\"forms.tags-u\" />\r\n                  </div>\r\n                  <div className=\"form-group has-top-label\">\r\n                    <DatePicker\r\n                      shouldCloseOnSelect={true}\r\n                      selected={this.state.startDateLabelTop}\r\n                      onChange={this.handleChangeDateLabelTop}\r\n                    />\r\n                    <IntlMessages id=\"forms.date-u\" />\r\n                  </div>\r\n\r\n                  <div className=\"form-group has-top-label\">\r\n                    <Select\r\n                      components={{ Input: CustomSelectInput }}\r\n                      className=\"react-select\"\r\n                      classNamePrefix=\"react-select\"\r\n                      name=\"form-field-name\"\r\n                      value={this.state.selectedOptionLabelTop}\r\n                      onChange={this.handleChangeLabelTop}\r\n                      options={selectData}\r\n                      placeholder=\"\"\r\n                    />\r\n                    <IntlMessages id=\"forms.state-u\" />\r\n                  </div>\r\n\r\n                  <Button color=\"primary\">\r\n                    <IntlMessages id=\"forms.submit\" />\r\n                  </Button>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n\r\n        <Row className=\"mb-4\">\r\n          <Colxx xxs=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>\r\n                  <IntlMessages id=\"forms.grid\" />\r\n                </CardTitle>\r\n                <Form>\r\n                  <FormGroup row>\r\n                    <Colxx sm={6}>\r\n                      <FormGroup>\r\n                        <Label for=\"exampleEmailGrid\">\r\n                          <IntlMessages id=\"forms.email\" />\r\n                        </Label>\r\n                        <Input\r\n                          type=\"email\"\r\n                          name=\"exampleEmailGrid\"\r\n                          id=\"exampleEmailGrid\"\r\n                          placeholder={messages[\"forms.email\"]}\r\n                        />\r\n                      </FormGroup>\r\n                    </Colxx>\r\n\r\n                    <Colxx sm={6}>\r\n                      <FormGroup>\r\n                        <Label for=\"examplePasswordGrid\">\r\n                          <IntlMessages id=\"forms.password\" />\r\n                        </Label>\r\n                        <Input\r\n                          type=\"password\"\r\n                          name=\"examplePasswordGrid\"\r\n                          id=\"examplePasswordGrid\"\r\n                          placeholder={messages[\"forms.password\"]}\r\n                        />\r\n                      </FormGroup>\r\n                    </Colxx>\r\n\r\n                    <Colxx sm={12}>\r\n                      <FormGroup>\r\n                        <Label for=\"exampleAddressGrid\">\r\n                          <IntlMessages id=\"forms.address\" />\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"exampleAddressGrid\"\r\n                          id=\"exampleAddressGrid\"\r\n                          placeholder={messages[\"forms.address\"]}\r\n                        />\r\n                      </FormGroup>\r\n                    </Colxx>\r\n\r\n                    <Colxx sm={12}>\r\n                      <FormGroup>\r\n                        <Label for=\"exampleAddress2Grid\">\r\n                          <IntlMessages id=\"forms.address2\" />\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"exampleAddress2Grid\"\r\n                          id=\"exampleAddress2Grid\"\r\n                          placeholder={messages[\"forms.address\"]}\r\n                        />\r\n                      </FormGroup>\r\n                    </Colxx>\r\n\r\n                    <Colxx sm={6}>\r\n                      <FormGroup>\r\n                        <Label for=\"exampleEmailGrid\">\r\n                          <IntlMessages id=\"forms.city\" />\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"exampleTextGrid\"\r\n                          id=\"exampleTextGrid\"\r\n                          placeholder={messages[\"forms.city\"]}\r\n                        />\r\n                      </FormGroup>\r\n                    </Colxx>\r\n\r\n                    <Colxx sm={4}>\r\n                      <FormGroup>\r\n                        <Label>\r\n                          <IntlMessages id=\"forms.state\" />\r\n                        </Label>\r\n                        <Input type=\"select\">\r\n                          <option>Option 1</option>\r\n                          <option>Option 2</option>\r\n                          <option>Option 3</option>\r\n                          <option>Option 4</option>\r\n                          <option>Option 5</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </Colxx>\r\n\r\n                    <Colxx sm={2}>\r\n                      <FormGroup>\r\n                        <Label for=\"exampleZipGrid\">\r\n                          <IntlMessages id=\"forms.zip\" />\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"exampleZipGrid\"\r\n                          id=\"exampleZipGrid\"\r\n                          placeholder={messages[\"forms.zip\"]}\r\n                        />\r\n                      </FormGroup>\r\n                    </Colxx>\r\n                  </FormGroup>\r\n\r\n                  <Button color=\"primary\">\r\n                    <IntlMessages id=\"forms.signup\" />\r\n                  </Button>\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(FormLayoutsUi)","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading}/></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import React from \"react\";\r\nimport { components } from \"react-select\";\r\n\r\nconst CustomSelectInput = props => {\r\n  var customProps = Object.assign({}, props);\r\n  delete customProps.autoCorrect;\r\n  delete customProps.autoCapitalize;\r\n  return <components.Input {...customProps} />;\r\n};\r\n\r\nexport default CustomSelectInput\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'small',\n  color: 'muted'\n};\n\nvar FormText = function FormText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      inline = props.inline,\n      color = props.color,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"inline\", \"color\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, !inline ? 'form-text' : false, color ? \"text-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormText.propTypes = propTypes;\nFormText.defaultProps = defaultProps;\nexport default FormText;"],"sourceRoot":""}