{"version":3,"sources":["components/common/CustomBootstrap.js","views/app/dashboards/nf/connect.js"],"names":["Colxx","props","widths","Separator","className","ConnectDashboard","Yup","shape","checkboxCustomSingle","oneOf","handleSubmit","bind","event","errors","values","console","log","length","window","location","href","this","intl","messages","xxs","size","aria-label","listClassName","active","disabled","onSubmit","name","label","type","xs","addonType","style","display","alignItems","justifyContent","color","Component","exportInputs","inputValues","injectIntl"],"mappings":"iHAAA,iGAEMA,EAAQ,SAACC,GAAD,OACV,kBAAC,IAAD,iBAASA,EAAT,CAAgBC,OAAQ,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,WAE5DC,EAAY,SAACF,GAAD,OACd,yBAAKG,UAAS,oBAAeH,EAAMG,e,4RCkBjCC,GALeC,WAAaC,MAAM,CACpCC,qBAAsBF,SAAWG,MAAM,EAAC,GAAO,wB,YAK/C,WAAYR,GAAQ,IAAD,8BACf,4CAAMA,KACDS,aAAe,EAAKA,aAAaC,KAAlB,gBAFL,E,0EAKLC,EAAOC,EAAQC,GACzBC,QAAQC,IAAIF,GACU,IAAlBD,EAAOI,SAEPC,OAAOC,SAASC,KAAO,gC,+BAKRC,KAAKpB,MAAMqB,KAAvBC,SACP,OACI,kBAAC,WAAD,KAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,IAAI,MACP,kBAAC,IAAD,CACIC,KAAK,KACLC,aAAW,0BACXC,cAAc,0BAEd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAgBvB,UAAU,OAAOgB,KAAK,UAClC,uBAAGhB,UAAU,6BAGrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAgBgB,KAAK,YAArB,MAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAgBA,KAAK,YAArB,MAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAgBA,KAAK,UAArB,MAEJ,kBAAC,IAAD,CAAgBQ,QAAM,GAClB,kBAAC,IAAD,CAAgBR,KAAK,KAArB,MAEJ,kBAAC,IAAD,CAAgBS,UAAQ,GACpB,kBAAC,IAAD,CAAgBT,KAAK,WAArB,SAchB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOI,IAAI,MACP,8CAGA,kBAAC,IAAD,CAAWpB,UAAU,WAK7B,kBAAC,IAAD,CAAKA,UAAU,QACX,kBAAC,IAAD,CAAOoB,IAAI,MACP,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,SAAD,CACIpB,UAAU,iCACV0B,SAAUT,KAAKX,cAGf,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,0CAQA,kBAAC,UAAD,CAASqB,KAAK,UAAUC,MAAM,6CACxBC,KAAK,WAKnB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,iCAIA,kBAAC,IAAD,+GAEA,kBAAC,UAAD,CAAS7B,UAAU,oBACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO8B,GAAI,GACP,kBAAC,IAAD,CAAiBC,UAAU,WAA3B,QAGJ,kBAAC,IAAD,CAAOD,GAAI,IACP,kBAAC,UAAD,CACIH,KAAK,oBACLE,KAAK,cAS7B,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,kCAQA,kBAAC,UAAD,CAASF,KAAK,cAAcC,MAAM,8EACvBC,KAAK,WAOxB,yBAAKG,MAAO,CACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,WAEhB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,MAAM,UAAUP,KAAK,SAASR,KAAK,KACnCrB,UAAU,QADlB,oC,GAhJjBqC,cAkK/B,SAASC,EAAa5B,GAClB,OAAOA,EAGJ,IAAM6B,EAAc,kBAAMD,GAElBE,sBAAWvC","file":"static/js/dashboard-nf-connect.c23c232a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, {Component, Fragment} from 'react';\r\nimport {injectIntl} from 'react-intl';\r\nimport {\r\n    Alert,\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardTitle,\r\n    InputGroupAddon,\r\n    Label,\r\n    Pagination,\r\n    PaginationItem,\r\n    PaginationLink,\r\n    Row\r\n} from 'reactstrap';\r\nimport {Colxx, Separator} from '../../../../components/common/CustomBootstrap';\r\nimport * as Yup from \"yup\";\r\nimport {AvCheckbox, AvCheckboxGroup, AvField, AvForm, AvGroup} from \"availity-reactstrap-validation\";\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n    checkboxCustomSingle: Yup.bool().oneOf([true], \"Must agree to this\"),\r\n});\r\n\r\n\r\nclass ConnectDashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit (event, errors, values){\r\n        console.log(values);\r\n        if (errors.length === 0) {\r\n            exportInputs(values);\r\n            window.location.href = '/app/dashboards/nf/summary';\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {messages} = this.props.intl;\r\n        return (\r\n            <Fragment>\r\n                {/* Page Navigation */}\r\n                <Row>\r\n                    <Colxx xxs=\"12\">\r\n                        <Pagination\r\n                            size=\"sm\"\r\n                            aria-label=\"Page navigation example\"\r\n                            listClassName=\"justify-content-center\"\r\n                        >\r\n                            <PaginationItem>\r\n                                <PaginationLink className=\"prev\" href=\"upload\">\r\n                                    <i className=\"simple-icon-arrow-left\"/>\r\n                                </PaginationLink>\r\n                            </PaginationItem>\r\n                            <PaginationItem>\r\n                                <PaginationLink href=\"overview\">1</PaginationLink>\r\n                            </PaginationItem>\r\n                            <PaginationItem>\r\n                                <PaginationLink href=\"generate\">2</PaginationLink>\r\n                            </PaginationItem>\r\n                            <PaginationItem>\r\n                                <PaginationLink href=\"upload\">3</PaginationLink>\r\n                            </PaginationItem>\r\n                            <PaginationItem active>\r\n                                <PaginationLink href=\"#\">4</PaginationLink>\r\n                            </PaginationItem>\r\n                            <PaginationItem disabled>\r\n                                <PaginationLink href=\"summary\">5</PaginationLink>\r\n                            </PaginationItem>\r\n                            {/*\r\n                            <PaginationItem disabled>\r\n                                <PaginationLink className=\"next\" href=\"#\">\r\n                                    <i className=\"simple-icon-arrow-right\"/>\r\n                                </PaginationLink>\r\n                            </PaginationItem>\r\n                            */}\r\n                        </Pagination>\r\n                    </Colxx>\r\n                </Row>\r\n\r\n                {/* Header */}\r\n                <Row>\r\n                    <Colxx xxs=\"12\">\r\n                        <h2>\r\n                            Connect wallet\r\n                        </h2>\r\n                        <Separator className=\"mb-5\"/>\r\n                    </Colxx>\r\n                </Row>\r\n\r\n                {/* Connect */}\r\n                <Row className=\"mb-4\">\r\n                    <Colxx xxs=\"12\">\r\n                        <Card>\r\n                            <CardBody>\r\n                                <AvForm\r\n                                    className=\"av-tooltip tooltip-label-right\"\r\n                                    onSubmit={this.handleSubmit}>\r\n\r\n                                    {/* Wallet address */}\r\n                                    <Row>\r\n                                        <Colxx>\r\n                                            <CardTitle>\r\n                                                1. Enter receiving wallet address\r\n                                            </CardTitle>\r\n                                            {/*\r\n                                            <p>Enter the receiving wallet adress here. Do not copy/paste\r\n                                                the link.</p>\r\n                                            */}\r\n\r\n                                            <AvField name=\"address\" label=\"Enter the receiving wallet adress here.\r\n                                                \" type=\"text\"/>\r\n                                        </Colxx>\r\n                                    </Row>\r\n\r\n                                    {/* Amount */}\r\n                                    <Row>\r\n                                        <Colxx>\r\n                                            <CardTitle>\r\n                                                2. Enter amount of Ether\r\n                                            </CardTitle>\r\n\r\n                                            <Label>Enter the amount of ether you would like to transfer. It should\r\n                                                be 32 times the amount of validations.</Label>\r\n                                            <AvGroup className=\"error-t-negative\">\r\n                                                <Row>\r\n                                                    <Colxx xs={1}>\r\n                                                        <InputGroupAddon addonType=\"prepend\">ETH</InputGroupAddon>\r\n                                                    </Colxx>\r\n\r\n                                                    <Colxx xs={11}>\r\n                                                        <AvField\r\n                                                            name=\"minPropNumberProp\"\r\n                                                            type=\"text\"\r\n                                                        />\r\n                                                    </Colxx>\r\n                                                </Row>\r\n                                            </AvGroup>\r\n                                        </Colxx>\r\n                                    </Row>\r\n\r\n                                    {/* Private Key */}\r\n                                    <Row>\r\n                                        <Colxx>\r\n                                            <CardTitle>\r\n                                                3. Enter your private key\r\n                                            </CardTitle>\r\n                                            {/*\r\n                                            <p>Enter the private key to the wallet which you are sending the Ether\r\n                                                from.</p>\r\n                                            */}\r\n\r\n                                            <AvField name=\"private-key\" label=\"Enter the private key to the wallet which you are sending the Ether\r\n                                                from.\" type=\"text\"/>\r\n                                        </Colxx>\r\n                                    </Row>\r\n\r\n\r\n\r\n                                    {/* Next step button */}\r\n                                    <div style={{\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                    }}>\r\n                                        <Row>\r\n                                            <Colxx>\r\n                                                <Button color=\"primary\" type=\"submit\" size=\"lg\"\r\n                                                        className=\"mb-2\">\r\n                                                    CONTINUE TO SUMMARY\r\n                                                </Button>\r\n                                            </Colxx>\r\n                                        </Row>\r\n                                    </div>\r\n                                </AvForm>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Colxx>\r\n                </Row>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction exportInputs(values) {\r\n    return values;\r\n}\r\n\r\nexport const inputValues = () => exportInputs;\r\n\r\nexport default injectIntl(ConnectDashboard);\r\n"],"sourceRoot":""}