{"version":3,"sources":["views/app/dashboards/index.js"],"names":["GenerateDefault","React","lazy","ContentDefault","AnalyticsDefault","EcommerceDefault","SummaryDefault","UploadDefault","ConnectDefault","OverviewDefault","SuccessDefault","NFGenerateDefault","NFSummaryDefault","NFUploadDefault","NFConnectDefault","NFOverviewDefault","NFSuccessDefault","Dashboards","match","fallback","className","exact","from","url","to","path","render","props"],"mappings":"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","file":"static/js/dashboards.509dee27.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nconst GenerateDefault = React.lazy(() =>\r\n  import(/* webpackChunkName: \"dashboard-generate\" */ './generate')\r\n);\r\nconst ContentDefault = React.lazy(() =>\r\n  import(/* webpackChunkName: \"dashboard-content\" */ './content')\r\n);\r\nconst AnalyticsDefault = React.lazy(() =>\r\n  import(/* webpackChunkName: \"dashboard-analytics\" */ './analytics')\r\n);\r\nconst EcommerceDefault = React.lazy(() =>\r\n  import(/* webpackChunkName: \"dashboard-ecommerce\" */ './ecommerce')\r\n);\r\nconst SummaryDefault = React.lazy(() =>\r\n    import(/* webpackChunkName: \"dashboard-summary\" */ './summary')\r\n);\r\nconst UploadDefault = React.lazy(() =>\r\n    import(/* webpackChunkName: \"dashboard-upload\" */ './upload')\r\n);\r\nconst ConnectDefault = React.lazy(() =>\r\n    import(/* webpackChunkName: \"dashboard-connect\" */ './connect')\r\n);\r\nconst OverviewDefault = React.lazy(() =>\r\n    import(/* webpackChunkName: \"dashboard-overview\" */ './overview')\r\n);\r\nconst SuccessDefault = React.lazy(() =>\r\n    import(/* webpackChunkName: \"dashboard-success\" */ './success')\r\n);\r\n\r\n\r\n\r\n// NO FRICTION\r\nconst NFGenerateDefault = React.lazy(() =>\r\n    import(/* webpackChunkName: \"dashboard-nf-generate\" */ './nf/generate')\r\n);\r\nconst NFSummaryDefault = React.lazy(() =>\r\n    import(/* webpackChunkName: \"dashboard-nf-summary\" */ './nf/summary')\r\n);\r\nconst NFUploadDefault = React.lazy(() =>\r\n    import(/* webpackChunkName: \"dashboard-nf-upload\" */ './nf/upload')\r\n);\r\nconst NFConnectDefault = React.lazy(() =>\r\n    import(/* webpackChunkName: \"dashboard-nf-connect\" */ './nf/connect')\r\n);\r\nconst NFOverviewDefault = React.lazy(() =>\r\n    import(/* webpackChunkName: \"dashboard-nf-overview\" */ './nf/overview')\r\n);\r\nconst NFSuccessDefault = React.lazy(() =>\r\n    import(/* webpackChunkName: \"dashboard-nf-success\" */ './nf/success')\r\n);\r\n\r\n\r\n\r\n\r\nconst Dashboards = ({ match }) => (\r\n  <Suspense fallback={<div className=\"loading\" />}>\r\n    <Switch>\r\n      <Redirect exact from={`${match.url}/`} to={`${match.url}/generate`} />\r\n      <Route\r\n        path={`${match.url}/generate`}\r\n        render={props => <GenerateDefault {...props} />}\r\n      />\r\n      <Route\r\n        path={`${match.url}/content`}\r\n        render={props => <ContentDefault {...props} />}\r\n      />\r\n      <Route\r\n        path={`${match.url}/ecommerce`}\r\n        render={props => <EcommerceDefault {...props} />}\r\n      />\r\n      <Route\r\n        path={`${match.url}/analytics`}\r\n        render={props => <AnalyticsDefault {...props} />}\r\n      />\r\n      <Route\r\n          path={`${match.url}/summary`}\r\n          render={props => <SummaryDefault {...props} />}\r\n      />\r\n      <Route\r\n          path={`${match.url}/upload`}\r\n          render={props => <UploadDefault {...props} />}\r\n      />\r\n      <Route\r\n          path={`${match.url}/connect`}\r\n          render={props => <ConnectDefault {...props} />}\r\n      />\r\n      <Route\r\n          path={`${match.url}/overview`}\r\n          render={props => <OverviewDefault {...props} />}\r\n      />\r\n      <Route\r\n          path={`${match.url}/success`}\r\n          render={props => <SuccessDefault {...props} />}\r\n      />\r\n\r\n\r\n\r\n      {/* NO FRICTION */}\r\n      <Route\r\n          path={`${match.url}/nf/generate`}\r\n          render={props => <NFGenerateDefault {...props} />}\r\n      />\r\n      <Route\r\n          path={`${match.url}/nf/summary`}\r\n          render={props => <NFSummaryDefault {...props} />}\r\n      />\r\n      <Route\r\n          path={`${match.url}/nf/upload`}\r\n          render={props => <NFUploadDefault {...props} />}\r\n      />\r\n      <Route\r\n          path={`${match.url}/nf/connect`}\r\n          render={props => <NFConnectDefault {...props} />}\r\n      />\r\n      <Route\r\n          path={`${match.url}/nf/overview`}\r\n          render={props => <NFOverviewDefault {...props} />}\r\n      />\r\n      <Route\r\n          path={`${match.url}/nf/success`}\r\n          render={props => <NFSuccessDefault {...props} />}\r\n      />\r\n\r\n      <Redirect to=\"/error\" />\r\n    </Switch>\r\n  </Suspense>\r\n);\r\nexport default Dashboards;\r\n"],"sourceRoot":""}